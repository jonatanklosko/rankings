{"version":3,"sources":["components/Navigation.js","utils/helpers.js","components/Home.js","utils/WcaApi.js","components/WcaPersonSelect.js","components/EditablePeopleList.js","components/RankingForm.js","utils/GoogleUrlShortenerApi.js","utils/events.js","components/EventSelect.js","components/RankingTable.js","components/Ranking.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","style","flexGrow","es","to","IconButton_default","component","href","target","rel","src","alt","Component","Helpers","result","eventId","format","missed","timeSeconds","Math","floor","solved","attempted","formattedTime","this","centisecondsToClockFormat","replace","concat","toFixed","Error","centiseconds","date","Date","setMilliseconds","toISOString","substr","file","Promise","resolve","reject","reader","FileReader","onload","event","text","match","onerror","readAsText","search","params","URLSearchParams","wcaIds","get","split","name","state","redirectPath","importPeople","_this","fileInput","click","handleFileChange","files","length","readWcaIdsFromFile","then","setState","join","_this2","Grid_default","container","spacing","justify","item","Button_default","Link","type","display","ref","input","onChange","onClick","camelizeKeysDeep","object","_","isArray","map","mapValues","mapKeys","value","key","camelCase","isObject","personDataByWcaIdCache","Map","WcaApi","path","fetchOptions","arguments","undefined","fetch","response","json","query","data","_$partition","partition","wcaId","has","_$partition2","Object","slicedToArray","cachedWcaIds","wcaIdsToFetch","cachedPeopleData","promises","chunk","wcaIdsSubset","all","flatten","peopleData","_ref","personalRecords","rest","objectWithoutProperties","objectSpread","toLower","each","personData","set","person","WcaPersonSelect","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","peopleFound","handleChange","bind","assertThisInitialized","findPeopleDebounced","debounce","findPeople","searchPeople","people","clearSelection","clearOnChange","_this3","downshift_esm","itemToString","onInputValueChange","_ref2","getInputProps","getItemProps","isOpen","highlightedIndex","inputValue","className","TextField_default","fullWidth","label","Paper_default","square","index","MenuItem_default","selected","id","Avatar_default","avatar","thumbUrl","ListItemText_default","primary","secondary","EditablePeopleList","uniqBy","toConsumableArray","elevation","padding","xs","WcaPersonSelect_WcaPersonSelect","onPersonAdded","List_default","dense","maxHeight","overflow","ListItem_default","ListItemSecondaryAction_default","onPersonRemoved","Icon_default","PureComponent","RankingForm","ranking","rankingFromSearchParams","location","loading","handleSubmit","handleNameChange","handlePeopleChange","getPeopleByWcaIds","preventDefault","encodeURIComponent","_this$state","onSubmit","direction","marginBottom","LinearProgress_default","EditablePeopleList_EditablePeopleList","GoogleUrlShortenerApi","longUrl","method","body","JSON","stringify","headers","Content-Type","error","events","icon","EventSelect","Tooltip_default","title","placement","opacity","RankingTable","resultToString","filter","orderBy","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","setFormat","TableBody_default","localRank","url","formattedPersonalBest","Ranking","shortUrl","window","handleEventChange","copyUrl","edit","downloadImage","withLocalRanks","shorten","filteredPeopleData","worldRanks","sortBy","record","indexOf","worldRank","clipboard","writeText","rankingName","toLowerCase","filename","html2canvas","imageArea","canvas","document","download","toDataURL","_this$state2","textAlign","EventSelect_EventSelect","element","RankingTable_RankingTable","theme","createMuiTheme","palette","blue","blueGrey","App","basename","process","styles","CssBaseline_default","Navigation_Navigation","md","exact","Home","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","App_App","getElementById","URL","origin","addEventListener","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bf30df7a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\n\nexport default class Navigation extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: 1 }}>\n            <Link to=\"/\">Rankings</Link>\n          </Typography>\n          <IconButton component=\"a\" href=\"https://github.com/jonatanklosko/rankings\" target=\"_blank\" rel=\"noopener\">\n            <img src=\"https://png.icons8.com/ios-glyphs/32/ffffff/github.png\" alt=\"GitHub\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n","export default class Helpers {\n  static resultToString(result, eventId, format) {\n    if (eventId === '333fm') {\n      switch (format) {\n        case 'single': return result;\n        case 'average': return (result / 100).toFixed(2);\n        default: throw new Error(`Unrecognized format type: ${format}`);\n      }\n    } else if (eventId === '333mbf') {\n      const missed = result % 100\n      result = Math.floor(result / 100);\n      const timeSeconds = result % 100000;\n      result = Math.floor(result / 100000);\n      const difference = 99 - (result % 100)\n      const solved = difference + missed\n      const attempted = solved + missed\n      const formattedTime = this.centisecondsToClockFormat(timeSeconds * 100).replace(/\\.00$/, '');\n      return `${solved}/${attempted} ${formattedTime}`;\n    } else {\n      return this.centisecondsToClockFormat(result);\n    }\n  }\n\n  static centisecondsToClockFormat(centiseconds) {\n    const date = new Date(null);\n    date.setMilliseconds(centiseconds * 10);\n    return date.toISOString().substr(11, 11).replace(/^[0:]*(?!\\.)/g, '');\n  }\n\n  static readWcaIdsFromFile(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const text = event.target.result;\n        resolve(text.match(/\\d{4}[A-Za-z]{4}\\d{2}/g) || []);\n      };\n      reader.onerror = reject;\n      reader.readAsText(file);\n    });\n  }\n\n  static rankingFromSearchParams(search) {\n    const params = new URLSearchParams(search);\n    return {\n      wcaIds: params.get('wcaids') ? params.get('wcaids').split(',') : [],\n      name: params.get('name') || ''\n    };\n  }\n}\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom';\n\nimport Helpers from '../utils/helpers';\n\nexport default class Navigation extends Component {\n  state = {\n    redirectPath: null\n  };\n\n  importPeople = () => {\n    this.fileInput.click();\n  };\n\n  handleFileChange = event => {\n    if (event.target.files.length > 0) {\n      Helpers.readWcaIdsFromFile(event.target.files[0])\n        .then(wcaIds =>\n          this.setState({\n            redirectPath: `/edit?wcaids=${wcaIds.join(',')}`\n          })\n        );\n    }\n  };\n\n  render() {\n    return this.state.redirectPath ? <Redirect to={this.state.redirectPath} /> : (\n      <Grid container spacing={24} justify=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\">What is it?</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle1\">\n            WCA-like rankings created by you!\n            Select a group of people and see how they are doing compared to each other.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Grid container spacing={8}>\n            <Grid item>\n              <Button variant=\"outlined\" component={Link} to=\"/edit\">\n                Go ahead and create one!\n              </Button>\n            </Grid>\n            <input type=\"file\" style={{ display: 'none' }} ref={input => this.fileInput = input} onChange={this.handleFileChange} />\n            <Grid item>\n              <Button variant=\"outlined\" onClick={this.importPeople}>\n                Import people from file\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import _ from 'lodash';\n\nconst camelizeKeysDeep = object =>\n  _.isArray(object)\n    ? _.map(object, camelizeKeysDeep)\n    : _.mapValues(\n        _.mapKeys(object, (value, key) => _.camelCase(key)),\n        value => _.isObject(value) ? camelizeKeysDeep(value) : value\n      );\n\nconst personDataByWcaIdCache = new Map();\n\nexport default class WcaApi {\n  static fetch(path, fetchOptions = {}) {\n    const baseApiUrl = \"https://www.worldcubeassociation.org/api/v0\";\n\n    return fetch(`${baseApiUrl}${path}`, fetchOptions)\n      .then(response => response.json())\n      .then(camelizeKeysDeep);\n  }\n\n  static searchPeople(query) {\n    return this.fetch(`/search/users?persons_table=true&q=${query}`)\n      .then(data => data.result);\n  }\n\n  static getPeopleByWcaIds(wcaIds) {\n    const [cachedWcaIds, wcaIdsToFetch] = _.partition(wcaIds, wcaId => personDataByWcaIdCache.has(wcaId));\n    const cachedPeopleData = _.map(cachedWcaIds, wcaId => personDataByWcaIdCache.get(wcaId));\n    const promises = _.map(_.chunk(wcaIdsToFetch, 100), wcaIdsSubset =>\n      this.fetch(`/persons?per_page=100&wca_ids=${wcaIdsSubset.join(',')}`)\n    );\n    return Promise.all(promises)\n      .then(_.flatten)\n      .then(peopleData =>\n        peopleData.map(({ personalRecords, ...rest }) => (\n          /* Revert camelization of event ids. */\n          { ...rest, personalRecords: _.mapKeys(personalRecords, (value, key) => _.toLower(key)) }\n        ))\n      )\n      .then(peopleData => {\n        _.each(peopleData, personData => personDataByWcaIdCache.set(personData.person.wcaId, personData));\n        return peopleData.concat(cachedPeopleData);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Downshift from 'downshift';\nimport _ from 'lodash';\n\nimport './WcaPersonSelect.css';\nimport WcaApi from '../utils/WcaApi';\n\nexport default class WcaPersonSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peopleFound: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.findPeopleDebounced = _.debounce(this.findPeople.bind(this), 300);\n  }\n\n  findPeople(query) {\n    if (query) {\n      WcaApi.searchPeople(query)\n        .then(people => this.setState({ peopleFound: people }));\n    } else {\n      this.setState({ peopleFound: [] });\n    }\n  }\n\n  handleChange(person, { clearSelection }) {\n    person && this.props.onChange(person);\n    this.props.clearOnChange && clearSelection();\n  }\n\n  render() {\n    return (\n      <Downshift\n        onChange={this.handleChange}\n        itemToString={person => _.get(person, 'name', '')}\n        onInputValueChange={this.findPeopleDebounced}\n      >\n        {({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n          <div className=\"wca-person-select\">\n            <TextField {...getInputProps({ fullWidth: this.props.fullWidth, label: this.props.label })} />\n            {isOpen && (\n              <Paper square className=\"options-list\">\n                {this.state.peopleFound.map((person, index) => (\n                  <MenuItem {...getItemProps({\n                    item: person,\n                    selected: highlightedIndex === index,\n                    key: person.id\n                  })}>\n                    <Avatar src={person.avatar.thumbUrl} />\n                    <ListItemText primary={person.name} secondary={person.wcaId} />\n                  </MenuItem>\n                ))}\n              </Paper>\n            )}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport _ from 'lodash';\n\nimport WcaPersonSelect from './WcaPersonSelect';\n\nexport default class EditablePeopleList extends PureComponent {\n  onPersonAdded(person) {\n    this.props.onChange(_.uniqBy([...this.props.people, person], 'wcaId'));\n  }\n\n  onPersonRemoved(person) {\n    this.props.onChange(_.reject(this.props.people, { wcaId: person.wcaId }));\n  }\n\n  render() {\n    return (\n      <Paper elevation={1} style={{ padding: 8 }}>\n        <Grid container spacing={8}>\n          <Grid item xs={12}>\n            <WcaPersonSelect fullWidth label=\"Add person\" clearOnChange onChange={person => this.onPersonAdded(person)} />\n          </Grid>\n          <Grid item xs={12}>\n            <List dense style={{ maxHeight: 200, overflow: 'auto' }}>\n              {this.props.people.map(person => (\n                <ListItem key={person.wcaId}>\n                  <Avatar src={person.avatar.thumbUrl} />\n                  <ListItemText primary={person.name} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={() => this.onPersonRemoved(person)}>\n                      <Icon>delete</Icon>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport WcaApi from '../utils/WcaApi';\nimport Helpers from '../utils/helpers';\n\nimport EditablePeopleList from './EditablePeopleList';\n\nexport default class RankingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: Helpers.rankingFromSearchParams(this.props.location.search),\n      people: [],\n      redirectPath: null,\n      loading: true\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePeopleChange = this.handlePeopleChange.bind(this);\n  }\n\n  componentDidMount() {\n    WcaApi.getPeopleByWcaIds(this.state.ranking.wcaIds)\n      .then(peopleData => this.setState({\n        loading: false,\n        people: _.map(peopleData, 'person')\n      }));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      redirectPath: `/show?name=${encodeURIComponent(this.state.ranking.name)}&wcaids=${_.map(this.state.people, 'wcaId').join(',')}`\n    });\n  }\n\n  handleNameChange(event) {\n    const { ranking } = this.state;\n    this.setState({\n      ranking: { ...ranking, name: event.target.value }\n    });\n  }\n\n  handlePeopleChange(people) {\n    this.setState({ people });\n  }\n\n  render() {\n    const { redirectPath, ranking, people, loading } = this.state;\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <div>\n        <Typography variant=\"h5\">Edit ranking</Typography>\n        <form onSubmit={this.handleSubmit}>\n          <Grid container direction=\"column\" spacing={16}>\n            <Grid item>\n              <TextField fullWidth label=\"Ranking name\" value={ranking.name} onChange={this.handleNameChange} />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle2\" style={{ marginBottom: 8 }}>\n                People\n              </Typography>\n              {loading ? <LinearProgress /> : (\n                <EditablePeopleList people={people} onChange={this.handlePeopleChange} />\n              )}\n            </Grid>\n            <Grid item>\n              <Button type=\"submit\" variant=\"outlined\">Done</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n","const apiUrl = 'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyCgOHkmUMcWKJ0tRlwEs-rzBZ1WA7sTZTI';\n\nexport default class GoogleUrlShortenerApi {\n  static shorten(longUrl) {\n    return fetch(apiUrl, {\n      method: 'POST',\n      body: JSON.stringify({ longUrl }),\n      headers: { 'Content-Type': 'application/json' }\n    })\n    .then(response => response.json())\n    .then(data => data.error ? Promise.reject(data.error) : data.id);\n  }\n}\n","const events = [\n  { id: '333',    name: 'Rubik\\'s Cube',      icon: 'event-333'   },\n  { id: '222',    name: '2x2x2 Cube',         icon: 'event-222'   },\n  { id: '444',    name: '4x4x4 Cube',         icon: 'event-444'   },\n  { id: '555',    name: '5x5x5 Cube',         icon: 'event-555'   },\n  { id: '666',    name: '6x6x6 Cube',         icon: 'event-666'   },\n  { id: '777',    name: '7x7x7 Cube',         icon: 'event-777'   },\n  { id: '333bf',  name: '3x3x3 Blindfolded',  icon: 'event-333bf' },\n  { id: '333fm',  name: '3x3x3 Fewest Moves', icon: 'event-333fm' },\n  { id: '333oh',  name: '3x3x3 One-Handed',   icon: 'event-333oh' },\n  { id: '333ft',  name: '3x3x3 With Feet',    icon: 'event-333ft' },\n  { id: 'minx',   name: 'Megaminx',           icon: 'event-minx'  },\n  { id: 'pyram',  name: 'Pyraminx',           icon: 'event-pyram' },\n  { id: 'clock',  name: 'Rubik\\'s Clock',     icon: 'event-clock' },\n  { id: 'skewb',  name: 'Skewb',              icon: 'event-skewb' },\n  { id: 'sq1',    name: 'Square-1',           icon: 'event-sq1'   },\n  { id: '444bf',  name: '4x4x4 Blindfolded',  icon: 'event-444bf' },\n  { id: '555bf',  name: '5x5x5 Blindfolded',  icon: 'event-555bf' },\n  { id: '333mbf', name: '3x3x3 Multi-Blind',  icon: 'event-333mbf' }\n];\n\nexport default events;\n","import React, { Component } from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport events from '../utils/events';\n\nexport default class EventSelect extends Component {\n  render() {\n    return (\n      <div>\n        {events.map(event => (\n          <Tooltip title={event.name} placement=\"top\" key={event.id}>\n            <IconButton onClick={() => this.props.onChange(event)}>\n              <span\n                className={`cubing-icon ${event.icon}`}\n                style={{ opacity: event.id === this.props.value.id ? 1 : 0.3 }}\n              />\n            </IconButton>\n          </Tooltip>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport _ from 'lodash';\n\nimport './RankingTable.css';\nimport Helpers from '../utils/helpers';\n\nexport default class RankingTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: 'single'\n    };\n  }\n\n  setFormat(format) {\n    this.setState({ format });\n  }\n\n  formattedPersonalBest(personData, format) {\n    const eventId = this.props.event.id;\n    const result = _.get(personData, `personalRecords.${eventId}.${format}.best`);\n    return result ? Helpers.resultToString(result, eventId, format) : '';\n  }\n\n  peopleData() {\n    const eventId = this.props.event.id;\n    return _(this.props.peopleData)\n      .filter(`personalRecords.${eventId}.${this.state.format}`)\n      .orderBy([`personalRecords.${eventId}.${this.state.format}.localRank`])\n      .value();\n  }\n\n  render() {\n    return (\n      <div className=\"ranking-table-container\">\n        <Table className={`sort-by-${this.state.format}`}>\n          <TableHead className=\"ranking-table-head\">\n            <TableRow>\n              <TableCell padding=\"dense\"></TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell numeric className=\"single\" onClick={() => this.setFormat('single')}>\n                Single\n              </TableCell>\n              <TableCell numeric className=\"average\" onClick={() => this.setFormat('average')}>\n                Average\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.peopleData().map(personData => (\n              <TableRow key={personData.person.wcaId}>\n                <TableCell padding=\"dense\">\n                  {personData.personalRecords[this.props.event.id][this.state.format].localRank}\n                </TableCell>\n                <TableCell>\n                  <a href={personData.person.url} target=\"_blank\" rel=\"noopener noreferrer\">{personData.person.name}</a>\n                </TableCell>\n                <TableCell numeric className=\"single\">\n                  {this.formattedPersonalBest(personData, 'single')}\n                </TableCell>\n                <TableCell numeric className=\"average\">\n                  {this.formattedPersonalBest(personData, 'average')}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport clipboard from 'clipboard-polyfill';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\nimport html2canvas from 'html2canvas';\n\nimport WcaApi from '../utils/WcaApi';\nimport Helpers from '../utils/helpers';\nimport GoogleUrlShortenerApi from '../utils/GoogleUrlShortenerApi';\nimport EventSelect from './EventSelect';\nimport RankingTable from './RankingTable';\n\nimport events from '../utils/events';\n\nexport default class Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: Helpers.rankingFromSearchParams(this.props.location.search),\n      peopleData: [],\n      event: events[0],\n      shortUrl: window.location.href, /* Use the long URL until the short one is fetched. */\n      redirectPath: null,\n      loading: true\n    }\n\n    this.handleEventChange = this.handleEventChange.bind(this);\n    this.copyUrl = this.copyUrl.bind(this);\n    this.edit = this.edit.bind(this);\n    this.downloadImage = this.downloadImage.bind(this);\n  }\n\n  componentDidMount() {\n    WcaApi.getPeopleByWcaIds(this.state.ranking.wcaIds)\n      .then(peopleData => this.setState({\n        loading: false,\n        peopleData: this.withLocalRanks(peopleData)\n      }));\n    GoogleUrlShortenerApi.shorten(window.location.href)\n      .then(shortUrl => this.setState({ shortUrl }));\n  }\n\n  withLocalRanks(peopleData) {\n    _.each(events, event => {\n      _.each(['single', 'average'], format => {\n        const filteredPeopleData = _.filter(peopleData, `personalRecords.${event.id}.${format}`);\n        const worldRanks = _.sortBy(_.map(filteredPeopleData, `personalRecords.${event.id}.${format}.worldRank`));\n        _.each(filteredPeopleData, ({ personalRecords }) => {\n          const record = personalRecords[event.id][format];\n          record.localRank = _.indexOf(worldRanks, record.worldRank) + 1;\n        })\n      });\n    });\n    return peopleData;\n  }\n\n  handleEventChange(event) {\n    this.setState({ event });\n  }\n\n  copyUrl() {\n    clipboard.writeText(this.state.shortUrl);\n  }\n\n  edit() {\n    this.setState({\n      redirectPath: `/edit?name=${encodeURIComponent(this.state.ranking.name)}&wcaids=${_.map(this.state.peopleData, 'person.wcaId').join(',')}`\n    });\n  }\n\n  downloadImage() {\n    const { event, ranking } = this.state;\n    const rankingName = ranking.name.toLowerCase().replace(/\\s+/, '-');\n    const filename = `rankings-${rankingName}-${event.id}.png`;\n    html2canvas(this.imageArea).then(canvas => {\n      const a = document.createElement('a');\n      a.download = filename;\n      a.href = canvas.toDataURL();\n      a.click();\n    });\n  }\n\n  render() {\n    const { redirectPath, ranking, peopleData, event, loading } = this.state;\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <div style={{ textAlign: 'center' }}>\n        <Typography variant=\"h5\">\n          {ranking.name}\n          <div style={{ display: 'inline-block' }}>\n            <Tooltip title=\"Copy URL\" placement=\"right\">\n              <IconButton onClick={this.copyUrl}>\n                <Icon>link</Icon>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Edit\" placement=\"right\">\n              <IconButton onClick={this.edit}>\n                <Icon>edit</Icon>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Download image\" placement=\"right\">\n              <IconButton onClick={this.downloadImage}>\n                <Icon>photo</Icon>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Typography>\n        <EventSelect value={event} onChange={this.handleEventChange} />\n        <div ref={element => this.imageArea = element}>\n          <Paper>\n            <RankingTable peopleData={peopleData} event={event} />\n            {loading && <LinearProgress />}\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport RankingForm from './RankingForm';\nimport Ranking from './Ranking';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: blueGrey,\n  },\n});\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Navigation />\n          <Grid container justify=\"center\">\n            <Grid item xs={12} md={8} style={{ padding: 16 }}>\n              <Route exact path=\"/\" component={Home}/>\n              <Route path=\"/edit\" component={RankingForm}/>\n              <Route path=\"/show\" component={Ranking}/>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}