{"version":3,"sources":["components/Navigation.js","logic/utils.js","logic/url-utils.js","components/Home.js","logic/wca-api.js","components/WcaPersonSelect.js","components/EditablePeopleList.js","components/RankingForm.js","logic/events.js","components/EventSelect.js","components/RankingTable.js","components/Ranking.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","style","flexGrow","es","to","IconButton_default","component","href","target","rel","src","alt","Component","centisecondsToClockFormat","centiseconds","date","Date","setMilliseconds","toISOString","substr","replace","readWcaIdsFromFile","file","Promise","resolve","reject","reader","FileReader","onload","event","text","result","match","onerror","readAsText","rankingFromSearchParams","search","array","params","URLSearchParams","wcaIds","get","split","Object","toConsumableArray","Set","name","rankingToSearchParams","_ref","wcaids","join","toString","state","redirectPath","importPeople","_this","fileInput","click","handleFileChange","files","length","then","setState","_this2","this","Grid_default","container","spacing","justify","item","Button_default","Link","type","display","ref","input","onChange","onClick","searchPeople","query","apiFetch","concat","data","personDataByWcaIdCache","Map","getPeopleByWcaIds","_$partition","_","partition","wcaId","has","_$partition2","slicedToArray","cachedWcaIds","wcaIdsToFetch","cachedPeopleData","map","promises","chunk","wcaIdsSubset","all","flatten","peopleData","personalRecords","rest","objectWithoutProperties","objectSpread","mapKeys","value","key","toLower","each","personData","set","person","path","fetchOptions","arguments","undefined","fetch","response","json","camelizeKeysDeep","object","isArray","mapValues","camelCase","isObject","WcaPersonSelect","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","peopleFound","findPeople","people","handleChange","clearSelection","_this$props","clearOnChange","findPeopleDebounced","debounce","_this$props2","fullWidth","label","downshift_esm","itemToString","onInputValueChange","_ref2","getInputProps","getItemProps","isOpen","highlightedIndex","inputValue","className","TextField_default","Paper_default","square","index","MenuItem_default","selected","id","Avatar_default","avatar","thumbUrl","ListItemText_default","primary","secondary","EditablePeopleList","uniqBy","elevation","padding","xs","WcaPersonSelect_WcaPersonSelect","onPersonAdded","List_default","dense","maxHeight","overflow","sortBy","ListItem_default","ListItemSecondaryAction_default","onPersonRemoved","Icon_default","PureComponent","RankingForm","handleSubmit","preventDefault","_this$state","ranking","handleNameChange","handlePeopleChange","location","loading","_this$state2","onSubmit","direction","marginBottom","LinearProgress_default","EditablePeopleList_EditablePeopleList","events","icon","EventSelect","Tooltip_default","title","placement","opacity","RankingTable","format","eventId","missed","timeSeconds","Math","floor","solved","attempted","formattedTime","toFixed","Error","resultToString","filter","orderBy","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","setFormat","TableBody_default","peopleDataForEvent","localRank","url","formattedPersonalBest","Ranking","handleEventChange","copyUrl","clipboard","writeText","shortUrl","edit","downloadImage","rankingName","toLowerCase","filename","html2canvas","imageArea","logging","canvas","document","download","toDataURL","window","longUrl","withLocalRanks","method","body","JSON","stringify","headers","Content-Type","error","filteredPeopleData","worldRanks","record","indexOf","worldRank","_this3","_this$state3","textAlign","EventSelect_EventSelect","element","RankingTable_RankingTable","theme","createMuiTheme","palette","blue","blueGrey","App","basename","process","styles","CssBaseline_default","Navigation_Navigation","md","exact","Home","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","App_App","getElementById","URL","origin","addEventListener","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.42b0f1ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\n\nexport default class Navigation extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: 1 }}>\n            <Link to=\"/\">Rankings</Link>\n          </Typography>\n          <IconButton component=\"a\" href=\"https://github.com/jonatanklosko/rankings\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src=\"https://png.icons8.com/ios-glyphs/32/ffffff/github.png\" alt=\"GitHub\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n","export const resultToString = (result, eventId, format) => {\n  if (eventId === '333fm') {\n    switch (format) {\n      case 'single': return result;\n      case 'average': return (result / 100).toFixed(2);\n      default: throw new Error(`Unrecognized format type: ${format}`);\n    }\n  } else if (eventId === '333mbf') {\n    const missed = result % 100\n    result = Math.floor(result / 100);\n    const timeSeconds = result % 100000;\n    result = Math.floor(result / 100000);\n    const difference = 99 - (result % 100)\n    const solved = difference + missed\n    const attempted = solved + missed\n    const formattedTime = centisecondsToClockFormat(timeSeconds * 100).replace(/\\.00$/, '');\n    return `${solved}/${attempted} ${formattedTime}`;\n  } else {\n    return centisecondsToClockFormat(result);\n  }\n};\n\nconst centisecondsToClockFormat = centiseconds => {\n  const date = new Date(null);\n  date.setMilliseconds(centiseconds * 10);\n  return date.toISOString().substr(11, 11).replace(/^[0:]*(?!\\.)/g, '');\n};\n\nexport const readWcaIdsFromFile = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = event => {\n      const text = event.target.result;\n      resolve(text.match(/\\d{4}[A-Za-z]{4}\\d{2}/g) || []);\n    };\n    reader.onerror = reject;\n    reader.readAsText(file);\n  });\n};\n\nexport const uniq = array =>\n  [...new Set(array)];\n","import { uniq } from './utils';\n\nconst googleUrlShortenerApiUrl = 'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyCgOHkmUMcWKJ0tRlwEs-rzBZ1WA7sTZTI';\n\nexport const shortenUrl = longUrl =>\n  fetch(googleUrlShortenerApiUrl, {\n    method: 'POST',\n    body: JSON.stringify({ longUrl }),\n    headers: { 'Content-Type': 'application/json' }\n  })\n  .then(response => response.json())\n  .then(data => data.error ? Promise.reject(data.error) : data.id);\n\nexport const rankingFromSearchParams = search => {\n  const params = new URLSearchParams(search);\n  return {\n    wcaIds: params.get('wcaids') ? uniq(params.get('wcaids').split(',')) : [],\n    name: params.get('name') || ''\n  };\n};\n\nexport const rankingToSearchParams = ({ name, wcaIds }) =>\n  new URLSearchParams({ name, wcaids: wcaIds.join(',') }).toString();\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom';\n\nimport { readWcaIdsFromFile } from '../logic/utils';\nimport { rankingToSearchParams } from '../logic/url-utils';\n\nexport default class Navigation extends Component {\n  state = {\n    redirectPath: null\n  };\n\n  importPeople = () => {\n    this.fileInput.click();\n  };\n\n  handleFileChange = event => {\n    if (event.target.files.length > 0) {\n      readWcaIdsFromFile(event.target.files[0])\n        .then(wcaIds =>\n          this.setState({\n            redirectPath: '/edit?' + rankingToSearchParams({ name: '', wcaIds })\n          })\n        );\n    }\n  };\n\n  render() {\n    const { redirectPath } = this.state\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <Grid container spacing={24} justify=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\">What is it?</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle1\">\n            <a href=\"https://www.worldcubeassociation.org/results/events.php\" target=\"_blank\" rel=\"noopener noreferrer\">WCA</a>-like\n            rankings created by you!\n            Select a group of people and see how they are doing compared to each other.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Grid container spacing={8}>\n            <Grid item>\n              <Button variant=\"outlined\" component={Link} to=\"/edit\">\n                Go ahead and create one!\n              </Button>\n            </Grid>\n            <input type=\"file\" style={{ display: 'none' }} ref={input => this.fileInput = input} onChange={this.handleFileChange} />\n            <Grid item>\n              <Button variant=\"outlined\" onClick={this.importPeople}>\n                Import people from file\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import _ from 'lodash';\n\nexport const searchPeople = query =>\n  apiFetch(`/search/users?persons_table=true&q=${query}`)\n    .then(data => data.result);\n\nconst personDataByWcaIdCache = new Map();\n\nexport const getPeopleByWcaIds = wcaIds => {\n  const [cachedWcaIds, wcaIdsToFetch] = _.partition(wcaIds, wcaId => personDataByWcaIdCache.has(wcaId));\n  const cachedPeopleData = _.map(cachedWcaIds, wcaId => personDataByWcaIdCache.get(wcaId));\n  const promises = _.map(_.chunk(wcaIdsToFetch, 100), wcaIdsSubset =>\n    apiFetch(`/persons?per_page=100&wca_ids=${wcaIdsSubset.join(',')}`)\n  );\n  return Promise.all(promises)\n    .then(_.flatten)\n    .then(peopleData =>\n      peopleData.map(({ personalRecords, ...rest }) => (\n        /* Revert camelization of event ids. */\n        { ...rest, personalRecords: _.mapKeys(personalRecords, (value, key) => _.toLower(key)) }\n      ))\n    )\n    .then(peopleData => {\n      _.each(peopleData, personData => personDataByWcaIdCache.set(personData.person.wcaId, personData));\n      return peopleData.concat(cachedPeopleData);\n    });\n}\n\nconst apiFetch = (path, fetchOptions = {}) => {\n  const baseApiUrl = \"https://www.worldcubeassociation.org/api/v0\";\n\n  return fetch(`${baseApiUrl}${path}`, fetchOptions)\n    .then(response => response.json())\n    .then(camelizeKeysDeep);\n};\n\nconst camelizeKeysDeep = object =>\n  _.isArray(object)\n    ? _.map(object, camelizeKeysDeep)\n    : _.mapValues(\n        _.mapKeys(object, (value, key) => _.camelCase(key)),\n        value => _.isObject(value) ? camelizeKeysDeep(value) : value\n      );\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Downshift from 'downshift';\nimport _ from 'lodash';\n\nimport { searchPeople } from '../logic/wca-api';\nimport './WcaPersonSelect.css';\n\nexport default class WcaPersonSelect extends Component {\n  state = {\n    peopleFound: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.findPeopleDebounced = _.debounce(this.findPeople, 300);\n  }\n\n  findPeople = query => {\n    if (query) {\n      searchPeople(query).then(people => this.setState({ peopleFound: people }));\n    } else {\n      this.setState({ peopleFound: [] });\n    }\n  };\n\n  handleChange = (person, { clearSelection }) => {\n    const { onChange, clearOnChange } = this.props;\n    person && onChange(person);\n    clearOnChange && clearSelection();\n  };\n\n  render() {\n    const { fullWidth, label } = this.props;\n\n    return (\n      <Downshift\n        onChange={this.handleChange}\n        itemToString={person => _.get(person, 'name', '')}\n        onInputValueChange={this.findPeopleDebounced}\n      >\n        {({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n          <div className=\"wca-person-select\">\n            <TextField {...getInputProps({ fullWidth, label })} />\n            {isOpen && (\n              <Paper square className=\"options-list\">\n                {this.state.peopleFound.map((person, index) => (\n                  <MenuItem {...getItemProps({\n                    item: person,\n                    selected: highlightedIndex === index,\n                    key: person.id\n                  })}>\n                    <Avatar src={person.avatar.thumbUrl} />\n                    <ListItemText primary={person.name} secondary={person.wcaId} />\n                  </MenuItem>\n                ))}\n              </Paper>\n            )}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport _ from 'lodash';\n\nimport WcaPersonSelect from './WcaPersonSelect';\n\nexport default class EditablePeopleList extends PureComponent {\n  onPersonAdded(person) {\n    this.props.onChange(_.uniqBy([...this.props.people, person], 'wcaId'));\n  }\n\n  onPersonRemoved(person) {\n    this.props.onChange(_.reject(this.props.people, { wcaId: person.wcaId }));\n  }\n\n  render() {\n    return (\n      <Paper elevation={1} style={{ padding: 8 }}>\n        <Grid container spacing={8}>\n          <Grid item xs={12}>\n            <WcaPersonSelect fullWidth label=\"Add person\" clearOnChange onChange={person => this.onPersonAdded(person)} />\n          </Grid>\n          <Grid item xs={12}>\n            <List dense style={{ maxHeight: 200, overflow: 'auto' }}>\n              {_.sortBy(this.props.people, 'name').map(person => (\n                <ListItem key={person.wcaId}>\n                  <Avatar src={person.avatar.thumbUrl} />\n                  <ListItemText primary={person.name} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={() => this.onPersonRemoved(person)}>\n                      <Icon>delete</Icon>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { getPeopleByWcaIds } from '../logic/wca-api';\nimport { rankingFromSearchParams, rankingToSearchParams } from '../logic/url-utils';\n\nimport EditablePeopleList from './EditablePeopleList';\n\nexport default class RankingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: rankingFromSearchParams(props.location.search),\n      people: [],\n      redirectPath: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    getPeopleByWcaIds(this.state.ranking.wcaIds)\n      .then(peopleData => this.setState({\n        loading: false,\n        people: _.map(peopleData, 'person')\n      }));\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { ranking, people } = this.state;\n    this.setState({\n      redirectPath: '/show?' + rankingToSearchParams({ name: ranking.name, wcaIds: _.map(people, 'wcaId') })\n    });\n  };\n\n  handleNameChange = event => {\n    const { ranking } = this.state;\n    this.setState({\n      ranking: { ...ranking, name: event.target.value }\n    });\n  };\n\n  handlePeopleChange = people => {\n    this.setState({ people });\n  };\n\n  render() {\n    const { redirectPath, ranking, people, loading } = this.state;\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <div>\n        <Typography variant=\"h5\">Edit ranking</Typography>\n        <form onSubmit={this.handleSubmit}>\n          <Grid container direction=\"column\" spacing={16}>\n            <Grid item>\n              <TextField fullWidth label=\"Ranking name\" value={ranking.name} onChange={this.handleNameChange} />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle2\" style={{ marginBottom: 8 }}>\n                People\n              </Typography>\n              {loading ? <LinearProgress /> : (\n                <EditablePeopleList people={people} onChange={this.handlePeopleChange} />\n              )}\n            </Grid>\n            <Grid item>\n              <Button type=\"submit\" variant=\"outlined\">Done</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n","const events = [\n  { id: '333',    name: 'Rubik\\'s Cube',      icon: 'event-333'   },\n  { id: '222',    name: '2x2x2 Cube',         icon: 'event-222'   },\n  { id: '444',    name: '4x4x4 Cube',         icon: 'event-444'   },\n  { id: '555',    name: '5x5x5 Cube',         icon: 'event-555'   },\n  { id: '666',    name: '6x6x6 Cube',         icon: 'event-666'   },\n  { id: '777',    name: '7x7x7 Cube',         icon: 'event-777'   },\n  { id: '333bf',  name: '3x3x3 Blindfolded',  icon: 'event-333bf' },\n  { id: '333fm',  name: '3x3x3 Fewest Moves', icon: 'event-333fm' },\n  { id: '333oh',  name: '3x3x3 One-Handed',   icon: 'event-333oh' },\n  { id: '333ft',  name: '3x3x3 With Feet',    icon: 'event-333ft' },\n  { id: 'minx',   name: 'Megaminx',           icon: 'event-minx'  },\n  { id: 'pyram',  name: 'Pyraminx',           icon: 'event-pyram' },\n  { id: 'clock',  name: 'Rubik\\'s Clock',     icon: 'event-clock' },\n  { id: 'skewb',  name: 'Skewb',              icon: 'event-skewb' },\n  { id: 'sq1',    name: 'Square-1',           icon: 'event-sq1'   },\n  { id: '444bf',  name: '4x4x4 Blindfolded',  icon: 'event-444bf' },\n  { id: '555bf',  name: '5x5x5 Blindfolded',  icon: 'event-555bf' },\n  { id: '333mbf', name: '3x3x3 Multi-Blind',  icon: 'event-333mbf' }\n];\n\nexport default events;\n","import React, { Component } from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport events from '../logic/events';\n\nexport default class EventSelect extends Component {\n  render() {\n    return (\n      <div>\n        {events.map(event => (\n          <Tooltip title={event.name} placement=\"top\" key={event.id}>\n            <IconButton onClick={() => this.props.onChange(event)}>\n              <span\n                className={`cubing-icon ${event.icon}`}\n                style={{ opacity: event.id === this.props.value.id ? 1 : 0.3 }}\n              />\n            </IconButton>\n          </Tooltip>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport _ from 'lodash';\n\nimport './RankingTable.css';\nimport { resultToString } from '../logic/utils';\n\nexport default class RankingTable extends Component {\n  state = {\n    format: 'single'\n  };\n\n  setFormat(format) {\n    this.setState({ format });\n  }\n\n  formattedPersonalBest(personData, format) {\n    const { event } = this.props;\n    const result = _.get(personData, `personalRecords.${event.id}.${format}.best`);\n    return result ? resultToString(result, event.id, format) : '';\n  }\n\n  peopleDataForEvent() {\n    const { event, peopleData } = this.props;\n    const { format } = this.state;\n    return _(peopleData)\n      .filter(`personalRecords.${event.id}.${format}`)\n      .orderBy([`personalRecords.${event.id}.${format}.localRank`])\n      .value();\n  }\n\n  render() {\n    const { format } = this.state;\n\n    return (\n      <div className=\"ranking-table-container\">\n        <Table className={`sort-by-${format}`}>\n          <TableHead className=\"ranking-table-head\">\n            <TableRow>\n              <TableCell padding=\"dense\"></TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell numeric className=\"single\" onClick={() => this.setFormat('single')}>\n                Single\n              </TableCell>\n              <TableCell numeric className=\"average\" onClick={() => this.setFormat('average')}>\n                Average\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.peopleDataForEvent().map(personData => (\n              <TableRow key={personData.person.wcaId}>\n                <TableCell padding=\"dense\">\n                  {personData.personalRecords[this.props.event.id][format].localRank}\n                </TableCell>\n                <TableCell>\n                  <a href={personData.person.url} target=\"_blank\" rel=\"noopener noreferrer\">{personData.person.name}</a>\n                </TableCell>\n                <TableCell numeric className=\"single\">\n                  {this.formattedPersonalBest(personData, 'single')}\n                </TableCell>\n                <TableCell numeric className=\"average\">\n                  {this.formattedPersonalBest(personData, 'average')}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport clipboard from 'clipboard-polyfill';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\nimport html2canvas from 'html2canvas';\n\nimport { getPeopleByWcaIds } from '../logic/wca-api';\nimport { shortenUrl, rankingFromSearchParams, rankingToSearchParams } from '../logic/url-utils';\nimport EventSelect from './EventSelect';\nimport RankingTable from './RankingTable';\n\nimport events from '../logic/events';\n\nexport default class Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: rankingFromSearchParams(props.location.search),\n      peopleData: [],\n      event: events[0],\n      shortUrl: window.location.href, /* Use the long URL until the short one is fetched. */\n      redirectPath: null,\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    getPeopleByWcaIds(this.state.ranking.wcaIds)\n      .then(peopleData => this.setState({\n        loading: false,\n        peopleData: this.withLocalRanks(peopleData)\n      }));\n    shortenUrl(window.location.href)\n      .then(shortUrl => this.setState({ shortUrl }));\n  }\n\n  withLocalRanks(peopleData) {\n    _.each(events, event => {\n      _.each(['single', 'average'], format => {\n        const filteredPeopleData = _.filter(peopleData, `personalRecords.${event.id}.${format}`);\n        const worldRanks = _.sortBy(_.map(filteredPeopleData, `personalRecords.${event.id}.${format}.worldRank`));\n        _.each(filteredPeopleData, ({ personalRecords }) => {\n          const record = personalRecords[event.id][format];\n          record.localRank = _.indexOf(worldRanks, record.worldRank) + 1;\n        })\n      });\n    });\n    return peopleData;\n  }\n\n  handleEventChange = event => {\n    this.setState({ event });\n  };\n\n  copyUrl = () => {\n    clipboard.writeText(this.state.shortUrl);\n  };\n\n  edit = () => {\n    const { ranking, peopleData } = this.state;\n    this.setState({\n      redirectPath: '/edit?' + rankingToSearchParams({ name: ranking.name, wcaIds: _.map(peopleData, 'person.wcaId') })\n    });\n  };\n\n  downloadImage = () => {\n    const { event, ranking } = this.state;\n    const rankingName = ranking.name.toLowerCase().replace(/\\s+/, '-');\n    const filename = `rankings-${rankingName}-${event.id}.png`;\n    html2canvas(this.imageArea, { logging: false }).then(canvas => {\n      const a = document.createElement('a');\n      a.download = filename;\n      a.href = canvas.toDataURL();\n      a.click();\n    });\n  };\n\n  render() {\n    const { redirectPath, ranking, peopleData, event, loading } = this.state;\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <div style={{ textAlign: 'center' }}>\n        <Typography variant=\"h5\">\n          {ranking.name}\n          <div style={{ display: 'inline-block' }}>\n            <Tooltip title=\"Copy URL\" placement=\"right\">\n              <IconButton onClick={this.copyUrl}>\n                <Icon>link</Icon>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Edit\" placement=\"right\">\n              <IconButton onClick={this.edit}>\n                <Icon>edit</Icon>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Download image\" placement=\"right\">\n              <IconButton onClick={this.downloadImage}>\n                <Icon>photo</Icon>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Typography>\n        <EventSelect value={event} onChange={this.handleEventChange} />\n        <div ref={element => this.imageArea = element}>\n          <Paper>\n            <RankingTable peopleData={peopleData} event={event} />\n            {loading && <LinearProgress />}\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport RankingForm from './RankingForm';\nimport Ranking from './Ranking';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: blueGrey,\n  },\n});\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Navigation />\n          <Grid container justify=\"center\">\n            <Grid item xs={12} md={8} style={{ padding: 16 }}>\n              <Route exact path=\"/\" component={Home}/>\n              <Route path=\"/edit\" component={RankingForm}/>\n              <Route path=\"/show\" component={Ranking}/>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}