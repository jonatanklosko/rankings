{"version":3,"sources":["components/Navigation.js","logic/utils.js","logic/url-utils.js","components/Home.js","logic/wca-api.js","components/WcaPersonSelect.js","components/EditablePeopleList.js","components/RankingForm.js","logic/events.js","components/EventSelect.js","components/RankingTable.js","components/Ranking.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","style","flexGrow","es","to","IconButton_default","component","href","target","rel","src","alt","Component","centisecondsToClockFormat","centiseconds","date","Date","setMilliseconds","toISOString","substr","replace","readWcaIdsFromFile","file","Promise","resolve","reject","reader","FileReader","onload","event","text","result","match","onerror","readAsText","rankingFromSearchParams","search","params","URLSearchParams","wcaIds","get","split","name","rankingToSearchParams","_ref","wcaids","join","toString","state","redirectPath","importPeople","_this","fileInput","click","handleFileChange","files","length","then","setState","_this2","this","Grid_default","container","spacing","justify","item","Button_default","Link","type","display","ref","input","onChange","onClick","searchPeople","query","apiFetch","concat","data","personDataByWcaIdCache","Map","getPeopleByWcaIds","_$partition","_","partition","wcaId","has","_$partition2","Object","slicedToArray","cachedWcaIds","wcaIdsToFetch","cachedPeopleData","map","promises","chunk","wcaIdsSubset","all","flatten","peopleData","personalRecords","rest","objectWithoutProperties","objectSpread","mapKeys","value","key","toLower","each","personData","set","person","path","fetchOptions","arguments","undefined","fetch","response","json","camelizeKeysDeep","object","isArray","mapValues","camelCase","isObject","WcaPersonSelect","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","peopleFound","findPeople","people","handleChange","clearSelection","_this$props","clearOnChange","findPeopleDebounced","debounce","_this$props2","fullWidth","label","downshift_esm","itemToString","onInputValueChange","_ref2","getInputProps","getItemProps","isOpen","highlightedIndex","inputValue","className","TextField_default","Paper_default","square","index","MenuItem_default","selected","id","Avatar_default","avatar","thumbUrl","ListItemText_default","primary","secondary","EditablePeopleList","uniqBy","toConsumableArray","elevation","padding","xs","WcaPersonSelect_WcaPersonSelect","onPersonAdded","List_default","dense","maxHeight","overflow","ListItem_default","ListItemSecondaryAction_default","onPersonRemoved","Icon_default","PureComponent","RankingForm","handleSubmit","preventDefault","_this$state","ranking","handleNameChange","handlePeopleChange","location","loading","_this$state2","onSubmit","direction","marginBottom","LinearProgress_default","EditablePeopleList_EditablePeopleList","events","icon","EventSelect","Tooltip_default","title","placement","opacity","RankingTable","format","eventId","missed","timeSeconds","Math","floor","solved","attempted","formattedTime","toFixed","Error","resultToString","filter","orderBy","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","setFormat","TableBody_default","peopleDataForEvent","localRank","url","formattedPersonalBest","Ranking","handleEventChange","copyUrl","clipboard","writeText","shortUrl","edit","downloadImage","rankingName","toLowerCase","filename","html2canvas","imageArea","logging","canvas","document","download","toDataURL","window","longUrl","withLocalRanks","method","body","JSON","stringify","headers","Content-Type","error","filteredPeopleData","worldRanks","sortBy","record","indexOf","worldRank","_this3","_this$state3","textAlign","EventSelect_EventSelect","element","RankingTable_RankingTable","theme","createMuiTheme","palette","blue","blueGrey","App","basename","process","styles","CssBaseline_default","Navigation_Navigation","md","exact","Home","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","App_App","getElementById","URL","origin","addEventListener","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4bAOqBA,mLAEjB,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,SAAS,SAASC,MAAM,WAC9BL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACED,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,QAAQ,KAAKH,MAAM,UAAUI,MAAO,CAAEC,SAAU,IAC1DV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,KAAT,aAEFZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYa,UAAU,IAAIC,KAAK,4CAA4CC,OAAO,SAASC,IAAI,uBAC7FjB,EAAAC,EAAAC,cAAA,OAAKgB,IAAI,yDAAyDC,IAAI,qBAT1CC,8BCelCC,EAA4B,SAAAC,GAChC,IAAMC,EAAO,IAAIC,KAAK,MAEtB,OADAD,EAAKE,gBAA+B,GAAfH,GACdC,EAAKG,cAAcC,OAAO,GAAI,IAAIC,QAAQ,gBAAiB,KAGvDC,EAAqB,SAAAC,GAChC,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAAC,GACd,IAAMC,EAAOD,EAAMrB,OAAOuB,OAC1BP,EAAQM,EAAKE,MAAM,2BAA6B,KAElDN,EAAOO,QAAUR,EACjBC,EAAOQ,WAAWZ,MCzBTa,EAA0B,SAAAC,GACrC,IAAMC,EAAS,IAAIC,gBAAgBF,GACnC,MAAO,CACLG,OAAQF,EAAOG,IAAI,UAAYH,EAAOG,IAAI,UAAUC,MAAM,KAAO,GACjEC,KAAML,EAAOG,IAAI,SAAW,KAInBG,EAAwB,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,KAAMH,EAATK,EAASL,OAAT,OACnC,IAAID,gBAAgB,CAAEI,OAAMG,OAAQN,EAAOO,KAAK,OAAQC,YCVrCxD,6MACnByD,MAAQ,CACNC,aAAc,QAGhBC,aAAe,WACbC,EAAKC,UAAUC,WAGjBC,iBAAmB,SAAAzB,GACbA,EAAMrB,OAAO+C,MAAMC,OAAS,GAC9BnC,EAAmBQ,EAAMrB,OAAO+C,MAAM,IACnCE,KAAK,SAAAlB,GAAM,OACVY,EAAKO,SAAS,CACZT,aAAc,SAAWN,EAAsB,CAAED,KAAM,GAAIH,wFAM5D,IAAAoB,EAAAC,KACCX,EAAiBW,KAAKZ,MAAtBC,aAER,OAAOA,EAAezD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,GAAI6C,IAClCzD,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMqE,WAAS,EAACC,QAAS,GAAIC,QAAQ,UACnCxE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,GACRzE,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,QAAQ,MAApB,gBAEFR,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,GACRzE,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,QAAQ,aAClBR,EAAAC,EAAAC,cAAA,KAAGa,KAAK,0DAA0DC,OAAO,SAASC,IAAI,uBAAtF,OADF,+GAMFjB,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,GACRzE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMqE,WAAS,EAACC,QAAS,GACvBvE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,GACRzE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQO,QAAQ,WAAWM,UAAW6D,IAAM/D,GAAG,SAA/C,6BAIFZ,EAAAC,EAAAC,cAAA,SAAO0E,KAAK,OAAOnE,MAAO,CAAEoE,QAAS,QAAUC,IAAK,SAAAC,GAAK,OAAIZ,EAAKP,UAAYmB,GAAOC,SAAUZ,KAAKN,mBACpG9D,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,GACRzE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQO,QAAQ,WAAWyE,QAASb,KAAKV,cAAzC,sCA5C0BtC,yFCR3B8D,EAAe,SAAAC,GAAK,OAC/BC,EAAQ,sCAAAC,OAAuCF,IAC5ClB,KAAK,SAAAqB,GAAI,OAAIA,EAAK/C,UAEjBgD,EAAyB,IAAIC,IAEtBC,EAAoB,SAAA1C,GAAU,IAAA2C,EACHC,IAAEC,UAAU7C,EAAQ,SAAA8C,GAAK,OAAIN,EAAuBO,IAAID,KADrDE,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GAClCQ,EADkCH,EAAA,GACpBI,EADoBJ,EAAA,GAEnCK,EAAmBT,IAAEU,IAAIH,EAAc,SAAAL,GAAK,OAAIN,EAAuBvC,IAAI6C,KAC3ES,EAAWX,IAAEU,IAAIV,IAAEY,MAAMJ,EAAe,KAAM,SAAAK,GAAY,OAC9DpB,EAAQ,iCAAAC,OAAkCmB,EAAalD,KAAK,SAE9D,OAAOvB,QAAQ0E,IAAIH,GAChBrC,KAAK0B,IAAEe,SACPzC,KAAK,SAAA0C,GAAU,OACdA,EAAWN,IAAI,SAAAjD,GAAA,IAAGwD,EAAHxD,EAAGwD,gBAAoBC,EAAvBb,OAAAc,EAAA,EAAAd,CAAA5C,EAAA,4BAAA4C,OAAAe,EAAA,EACb,CADa,GAERF,EAFQ,CAEFD,gBAAiBjB,IAAEqB,QAAQJ,EAAiB,SAACK,EAAOC,GAAR,OAAgBvB,IAAEwB,QAAQD,WAGpFjD,KAAK,SAAA0C,GAEJ,OADAhB,IAAEyB,KAAKT,EAAY,SAAAU,GAAU,OAAI9B,EAAuB+B,IAAID,EAAWE,OAAO1B,MAAOwB,KAC9EV,EAAWtB,OAAOe,MAIzBhB,EAAW,SAACoC,GAA4B,IAAtBC,EAAsBC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAGrC,OAAOE,MAAK,GAAAvC,OAFO,+CAEPA,OAAiBmC,GAAQC,GAClCxD,KAAK,SAAA4D,GAAQ,OAAIA,EAASC,SAC1B7D,KAAK8D,IAGJA,EAAmB,SAAnBA,EAAmBC,GAAM,OAC7BrC,IAAEsC,QAAQD,GACNrC,IAAEU,IAAI2B,EAAQD,GACdpC,IAAEuC,UACAvC,IAAEqB,QAAQgB,EAAQ,SAACf,EAAOC,GAAR,OAAgBvB,IAAEwC,UAAUjB,KAC9C,SAAAD,GAAK,OAAItB,IAAEyC,SAASnB,GAASc,EAAiBd,GAASA,wLC7B1CoB,uBAKnB,SAAAA,EAAYC,GAAO,IAAA3E,EAAA,OAAAqC,OAAAuC,EAAA,EAAAvC,CAAA5B,KAAAiE,IACjB1E,EAAAqC,OAAAwC,EAAA,EAAAxC,CAAA5B,KAAA4B,OAAAyC,EAAA,EAAAzC,CAAAqC,GAAAK,KAAAtE,KAAMkE,KALR9E,MAAQ,CACNmF,YAAa,IAGIhF,EAKnBiF,WAAa,SAAAzD,GACPA,EACFD,EAAaC,GAAOlB,KAAK,SAAA4E,GAAM,OAAIlF,EAAKO,SAAS,CAAEyE,YAAaE,MAEhElF,EAAKO,SAAS,CAAEyE,YAAa,MATdhF,EAanBmF,aAAe,SAACvB,EAADnE,GAAgC,IAArB2F,EAAqB3F,EAArB2F,eAAqBC,EACTrF,EAAK2E,MAAjCtD,EADqCgE,EACrChE,SAAUiE,EAD2BD,EAC3BC,cAClB1B,GAAUvC,EAASuC,GACnB0B,GAAiBF,KAdjBpF,EAAKuF,oBAAsBvD,IAAEwD,SAASxF,EAAKiF,WAAY,KAFtCjF,wEAmBV,IAAAQ,EAAAC,KAAAgF,EACsBhF,KAAKkE,MAA1Be,EADDD,EACCC,UAAWC,EADZF,EACYE,MAEnB,OACEtJ,EAAAC,EAAAC,cAACqJ,GAAA,EAAD,CACEvE,SAAUZ,KAAK0E,aACfU,aAAc,SAAAjC,GAAM,OAAI5B,IAAE3C,IAAIuE,EAAQ,OAAQ,KAC9CkC,mBAAoBrF,KAAK8E,qBAExB,SAAAQ,GAAA,IAAGC,EAAHD,EAAGC,cAAeC,EAAlBF,EAAkBE,aAAcC,EAAhCH,EAAgCG,OAAoBC,GAApDJ,EAAwCK,WAAxCL,EAAoDI,kBAApD,OACC9J,EAAAC,EAAAC,cAAA,OAAK8J,UAAU,qBACbhK,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAc0J,EAAc,CAAEN,YAAWC,WACzCO,GACC7J,EAAAC,EAAAC,cAACgK,GAAAjK,EAAD,CAAOkK,QAAM,EAACH,UAAU,gBACrB7F,EAAKX,MAAMmF,YAAYtC,IAAI,SAACkB,EAAQ6C,GAAT,OAC1BpK,EAAAC,EAAAC,cAACmK,GAAApK,EAAa2J,EAAa,CACzBnF,KAAM8C,EACN+C,SAAUR,IAAqBM,EAC/BlD,IAAKK,EAAOgD,KAEZvK,EAAAC,EAAAC,cAACsK,GAAAvK,EAAD,CAAQiB,IAAKqG,EAAOkD,OAAOC,WAC3B1K,EAAAC,EAAAC,cAACyK,GAAA1K,EAAD,CAAc2K,QAASrD,EAAOrE,KAAM2H,UAAWtD,EAAO1B,sBA7C7BzE,cCExB0J,yLACLvD,GACZnD,KAAKkE,MAAMtD,SAASW,IAAEoF,OAAF/E,OAAAgF,EAAA,EAAAhF,CAAa5B,KAAKkE,MAAMO,QAAxBxD,OAAA,CAAgCkC,IAAS,kDAG/CA,GACdnD,KAAKkE,MAAMtD,SAASW,IAAE1D,OAAOmC,KAAKkE,MAAMO,OAAQ,CAAEhD,MAAO0B,EAAO1B,0CAGzD,IAAAlC,EAAAS,KACP,OACEpE,EAAAC,EAAAC,cAACgK,GAAAjK,EAAD,CAAOgL,UAAW,EAAGxK,MAAO,CAAEyK,QAAS,IACrClL,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMqE,WAAS,EAACC,QAAS,GACvBvE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,EAAC0G,GAAI,IACbnL,EAAAC,EAAAC,cAACkL,GAAD,CAAiB/B,WAAS,EAACC,MAAM,aAAaL,eAAa,EAACjE,SAAU,SAAAuC,GAAM,OAAI5D,EAAK0H,cAAc9D,OAErGvH,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,EAAC0G,GAAI,IACbnL,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,CAAMsL,OAAK,EAAC9K,MAAO,CAAE+K,UAAW,IAAKC,SAAU,SAC5CrH,KAAKkE,MAAMO,OAAOxC,IAAI,SAAAkB,GAAM,OAC3BvH,EAAAC,EAAAC,cAACwL,GAAAzL,EAAD,CAAUiH,IAAKK,EAAO1B,OACpB7F,EAAAC,EAAAC,cAACsK,GAAAvK,EAAD,CAAQiB,IAAKqG,EAAOkD,OAAOC,WAC3B1K,EAAAC,EAAAC,cAACyK,GAAA1K,EAAD,CAAc2K,QAASrD,EAAOrE,OAC9BlD,EAAAC,EAAAC,cAACyL,GAAA1L,EAAD,KACED,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYgF,QAAS,kBAAMtB,EAAKiI,gBAAgBrE,KAC9CvH,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,+BAxB0B6L,iBCA3BC,eACnB,SAAAA,EAAYzD,GAAO,IAAA3E,EAAA,OAAAqC,OAAAuC,EAAA,EAAAvC,CAAA5B,KAAA2H,IACjBpI,EAAAqC,OAAAwC,EAAA,EAAAxC,CAAA5B,KAAA4B,OAAAyC,EAAA,EAAAzC,CAAA+F,GAAArD,KAAAtE,KAAMkE,KAiBR0D,aAAe,SAAA3J,GACbA,EAAM4J,iBADgB,IAAAC,EAEMvI,EAAKH,MAAzB2I,EAFcD,EAEdC,QAAStD,EAFKqD,EAELrD,OACjBlF,EAAKO,SAAS,CACZT,aAAc,SAAWN,EAAsB,CAAED,KAAMiJ,EAAQjJ,KAAMH,OAAQ4C,IAAEU,IAAIwC,EAAQ,cAtB5ElF,EA0BnByI,iBAAmB,SAAA/J,GAAS,IAClB8J,EAAYxI,EAAKH,MAAjB2I,QACRxI,EAAKO,SAAS,CACZiI,QAAQnG,OAAAe,EAAA,EAAAf,CAAA,GAAMmG,EAAP,CAAgBjJ,KAAMb,EAAMrB,OAAOiG,WA7B3BtD,EAiCnB0I,mBAAqB,SAAAxD,GACnBlF,EAAKO,SAAS,CAAE2E,YAhChBlF,EAAKH,MAAQ,CACX2I,QAASxJ,EAAwB2F,EAAMgE,SAAS1J,QAChDiG,OAAQ,GACRpF,aAAc,KACd8I,SAAS,GANM5I,mFAUC,IAAAQ,EAAAC,KAClBqB,EAAkBrB,KAAKZ,MAAM2I,QAAQpJ,QAClCkB,KAAK,SAAA0C,GAAU,OAAIxC,EAAKD,SAAS,CAChCqI,SAAS,EACT1D,OAAQlD,IAAEU,IAAIM,EAAY,+CAuBvB,IAAA6F,EAC4CpI,KAAKZ,MAAhDC,EADD+I,EACC/I,aAAc0I,EADfK,EACeL,QAAStD,EADxB2D,EACwB3D,OAAQ0D,EADhCC,EACgCD,QAEvC,OAAO9I,EAAezD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,GAAI6C,IAClCzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,QAAQ,MAApB,gBACAR,EAAAC,EAAAC,cAAA,QAAMuM,SAAUrI,KAAK4H,cACnBhM,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMqE,WAAS,EAACoI,UAAU,SAASnI,QAAS,IAC1CvE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,GACRzE,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,CAAWoJ,WAAS,EAACC,MAAM,eAAerC,MAAOkF,EAAQjJ,KAAM8B,SAAUZ,KAAKgI,oBAEhFpM,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,GACRzE,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,QAAQ,YAAYC,MAAO,CAAEkM,aAAc,IAAvD,UAGCJ,EAAUvM,EAAAC,EAAAC,cAAC0M,EAAA3M,EAAD,MACTD,EAAAC,EAAAC,cAAC2M,GAAD,CAAoBhE,OAAQA,EAAQ7D,SAAUZ,KAAKiI,sBAGvDrM,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,GACRzE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQ2E,KAAK,SAASpE,QAAQ,YAA9B,mBA1D2BY,2ECO1B0L,GArBA,CACb,CAAEvC,GAAI,MAAUrH,KAAM,eAAsB6J,KAAM,aAClD,CAAExC,GAAI,MAAUrH,KAAM,aAAsB6J,KAAM,aAClD,CAAExC,GAAI,MAAUrH,KAAM,aAAsB6J,KAAM,aAClD,CAAExC,GAAI,MAAUrH,KAAM,aAAsB6J,KAAM,aAClD,CAAExC,GAAI,MAAUrH,KAAM,aAAsB6J,KAAM,aAClD,CAAExC,GAAI,MAAUrH,KAAM,aAAsB6J,KAAM,aAClD,CAAExC,GAAI,QAAUrH,KAAM,oBAAsB6J,KAAM,eAClD,CAAExC,GAAI,QAAUrH,KAAM,qBAAsB6J,KAAM,eAClD,CAAExC,GAAI,QAAUrH,KAAM,mBAAsB6J,KAAM,eAClD,CAAExC,GAAI,QAAUrH,KAAM,kBAAsB6J,KAAM,eAClD,CAAExC,GAAI,OAAUrH,KAAM,WAAsB6J,KAAM,cAClD,CAAExC,GAAI,QAAUrH,KAAM,WAAsB6J,KAAM,eAClD,CAAExC,GAAI,QAAUrH,KAAM,gBAAsB6J,KAAM,eAClD,CAAExC,GAAI,QAAUrH,KAAM,QAAsB6J,KAAM,eAClD,CAAExC,GAAI,MAAUrH,KAAM,WAAsB6J,KAAM,aAClD,CAAExC,GAAI,QAAUrH,KAAM,oBAAsB6J,KAAM,eAClD,CAAExC,GAAI,QAAUrH,KAAM,oBAAsB6J,KAAM,eAClD,CAAExC,GAAI,SAAUrH,KAAM,oBAAsB6J,KAAM,iBCZ/BC,oLACV,IAAArJ,EAAAS,KACP,OACEpE,EAAAC,EAAAC,cAAA,WACG4M,GAAOzG,IAAI,SAAAhE,GAAK,OACfrC,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CAASiN,MAAO7K,EAAMa,KAAMiK,UAAU,MAAMjG,IAAK7E,EAAMkI,IACrDvK,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYgF,QAAS,kBAAMtB,EAAK2E,MAAMtD,SAAS3C,KAC7CrC,EAAAC,EAAAC,cAAA,QACE8J,UAAS,eAAA3E,OAAiBhD,EAAM0K,MAChCtM,MAAO,CAAE2M,QAAS/K,EAAMkI,KAAO5G,EAAK2E,MAAMrB,MAAMsD,GAAK,EAAI,kBAThCnJ,oHCKpBiM,sNACnB7J,MAAQ,CACN8J,OAAQ,mFAGAA,GACRlJ,KAAKF,SAAS,CAAEoJ,yDAGIjG,EAAYiG,GAAQ,IAChCjL,EAAU+B,KAAKkE,MAAfjG,MACFE,EAASoD,IAAE3C,IAAIqE,EAAN,mBAAAhC,OAAqChD,EAAMkI,GAA3C,KAAAlF,OAAiDiI,EAAjD,UACf,OAAO/K,ETvBmB,SAACA,EAAQgL,EAASD,GAC9C,GAAgB,UAAZC,EAMG,IAAgB,WAAZA,EAAsB,CAC/B,IAAMC,EAASjL,EAAS,IAElBkL,GADNlL,EAASmL,KAAKC,MAAMpL,EAAS,MACA,IAGvBqL,EADa,IADnBrL,EAASmL,KAAKC,MAAMpL,EAAS,MACK,IACNiL,EACtBK,EAAYD,EAASJ,EACrBM,EAAgBzM,EAAwC,IAAdoM,GAAmB7L,QAAQ,QAAS,IACpF,SAAAyD,OAAUuI,EAAV,KAAAvI,OAAoBwI,EAApB,KAAAxI,OAAiCyI,GAEjC,OAAOzM,EAA0BkB,GAhBjC,OAAQ+K,GACN,IAAK,SAAU,OAAO/K,EACtB,IAAK,UAAW,OAAQA,EAAS,KAAKwL,QAAQ,GAC9C,QAAS,MAAM,IAAIC,MAAJ,6BAAA3I,OAAuCiI,KSkBxCW,CAAe1L,EAAQF,EAAMkI,GAAI+C,GAAU,gDAGxC,IAAAtE,EACW5E,KAAKkE,MAA3BjG,EADW2G,EACX3G,MAAOsE,EADIqC,EACJrC,WACP2G,EAAWlJ,KAAKZ,MAAhB8J,OACR,OAAO3H,IAAEgB,GACNuH,OADI,mBAAA7I,OACsBhD,EAAMkI,GAD5B,KAAAlF,OACkCiI,IACtCa,QAAQ,oBAAA9I,OAAoBhD,EAAMkI,GAA1B,KAAAlF,OAAgCiI,EAAhC,gBACRrG,yCAGI,IAAA9C,EAAAC,KACCkJ,EAAWlJ,KAAKZ,MAAhB8J,OAER,OACEtN,EAAAC,EAAAC,cAAA,OAAK8J,UAAU,2BACbhK,EAAAC,EAAAC,cAACkO,GAAAnO,EAAD,CAAO+J,UAAS,WAAA3E,OAAaiI,IAC3BtN,EAAAC,EAAAC,cAACmO,GAAApO,EAAD,CAAW+J,UAAU,sBACnBhK,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,KACED,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CAAWiL,QAAQ,UACnBlL,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,aACAD,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CAAWuO,SAAO,EAACxE,UAAU,SAAS/E,QAAS,kBAAMd,EAAKsK,UAAU,YAApE,UAGAzO,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CAAWuO,SAAO,EAACxE,UAAU,UAAU/E,QAAS,kBAAMd,EAAKsK,UAAU,aAArE,aAKJzO,EAAAC,EAAAC,cAACwO,GAAAzO,EAAD,KACGmE,KAAKuK,qBAAqBtI,IAAI,SAAAgB,GAAU,OACvCrH,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,CAAUiH,IAAKG,EAAWE,OAAO1B,OAC/B7F,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CAAWiL,QAAQ,SAChB7D,EAAWT,gBAAgBzC,EAAKmE,MAAMjG,MAAMkI,IAAI+C,GAAQsB,WAE3D5O,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,KACED,EAAAC,EAAAC,cAAA,KAAGa,KAAMsG,EAAWE,OAAOsH,IAAK7N,OAAO,SAASC,IAAI,uBAAuBoG,EAAWE,OAAOrE,OAE/FlD,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CAAWuO,SAAO,EAACxE,UAAU,UAC1B7F,EAAK2K,sBAAsBzH,EAAY,WAE1CrH,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CAAWuO,SAAO,EAACxE,UAAU,WAC1B7F,EAAK2K,sBAAsBzH,EAAY,yBAvDhBjG,cCQrB2N,eACnB,SAAAA,EAAYzG,GAAO,IAAA3E,EAAA,OAAAqC,OAAAuC,EAAA,EAAAvC,CAAA5B,KAAA2K,IACjBpL,EAAAqC,OAAAwC,EAAA,EAAAxC,CAAA5B,KAAA4B,OAAAyC,EAAA,EAAAzC,CAAA+I,GAAArG,KAAAtE,KAAMkE,KAmCR0G,kBAAoB,SAAA3M,GAClBsB,EAAKO,SAAS,CAAE7B,WArCCsB,EAwCnBsL,QAAU,WACRC,KAAUC,UAAUxL,EAAKH,MAAM4L,WAzCdzL,EA4CnB0L,KAAO,WAAM,IAAAnD,EACqBvI,EAAKH,MAA7B2I,EADGD,EACHC,QAASxF,EADNuF,EACMvF,WACjBhD,EAAKO,SAAS,CACZT,aAAc,SAAWN,EAAsB,CAAED,KAAMiJ,EAAQjJ,KAAMH,OAAQ4C,IAAEU,IAAIM,EAAY,qBA/ChFhD,EAmDnB2L,cAAgB,WAAM,IAAA9C,EACO7I,EAAKH,MAAxBnB,EADYmK,EACZnK,MACFkN,EAFc/C,EACLL,QACajJ,KAAKsM,cAAc5N,QAAQ,MAAO,KACxD6N,EAAQ,YAAApK,OAAekK,EAAf,KAAAlK,OAA8BhD,EAAMkI,GAApC,QACdmF,KAAY/L,EAAKgM,UAAW,CAAEC,SAAS,IAAS3L,KAAK,SAAA4L,GACnD,IAAM5P,EAAI6P,SAAS5P,cAAc,KACjCD,EAAE8P,SAAWN,EACbxP,EAAEc,KAAO8O,EAAOG,YAChB/P,EAAE4D,WAzDJF,EAAKH,MAAQ,CACX2I,QAASxJ,EAAwB2F,EAAMgE,SAAS1J,QAChD+D,WAAY,GACZtE,MAAOyK,GAAO,GACdsC,SAAUa,OAAO3D,SAASvL,KAC1B0C,aAAc,KACd8I,SAAS,GARM5I,mFAYC,IT9BIuM,ES8BJ/L,EAAAC,KAClBqB,EAAkBrB,KAAKZ,MAAM2I,QAAQpJ,QAClCkB,KAAK,SAAA0C,GAAU,OAAIxC,EAAKD,SAAS,CAChCqI,SAAS,EACT5F,WAAYxC,EAAKgM,eAAexJ,QTlCduJ,ESoCXD,OAAO3D,SAASvL,KTnC7B6G,MAH+B,6FAGC,CAC9BwI,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEL,YACvBM,QAAS,CAAEC,eAAgB,sBAE5BxM,KAAK,SAAA4D,GAAQ,OAAIA,EAASC,SAC1B7D,KAAK,SAAAqB,GAAI,OAAIA,EAAKoL,MAAQ3O,QAAQE,OAAOqD,EAAKoL,OAASpL,EAAKiF,MS8BxDtG,KAAK,SAAAmL,GAAQ,OAAIjL,EAAKD,SAAS,CAAEkL,sDAGvBzI,GAWb,OAVAhB,IAAEyB,KAAK0F,GAAQ,SAAAzK,GACbsD,IAAEyB,KAAK,CAAC,SAAU,WAAY,SAAAkG,GAC5B,IAAMqD,EAAqBhL,IAAEuI,OAAOvH,EAAT,mBAAAtB,OAAwChD,EAAMkI,GAA9C,KAAAlF,OAAoDiI,IACzEsD,EAAajL,IAAEkL,OAAOlL,IAAEU,IAAIsK,EAAN,mBAAAtL,OAA6ChD,EAAMkI,GAAnD,KAAAlF,OAAyDiI,EAAzD,gBAC5B3H,IAAEyB,KAAKuJ,EAAoB,SAAAvN,GAAyB,IAC5C0N,EAD4C1N,EAAtBwD,gBACGvE,EAAMkI,IAAI+C,GACzCwD,EAAOlC,UAAYjJ,IAAEoL,QAAQH,EAAYE,EAAOE,WAAa,QAI5DrK,mCA8BA,IAAAsK,EAAA7M,KAAA8M,EACuD9M,KAAKZ,MAA3DC,EADDyN,EACCzN,aAAc0I,EADf+E,EACe/E,QAASxF,EADxBuK,EACwBvK,WAAYtE,EADpC6O,EACoC7O,MAAOkK,EAD3C2E,EAC2C3E,QAElD,OAAO9I,EAAezD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,GAAI6C,IAClCzD,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAAE0Q,UAAW,WACvBnR,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,QAAQ,MACjB2L,EAAQjJ,KACTlD,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAAEoE,QAAS,iBACrB7E,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CAASiN,MAAM,WAAWC,UAAU,SAClCnN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYgF,QAASb,KAAK6K,SACxBjP,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,eAGJD,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CAASiN,MAAM,OAAOC,UAAU,SAC9BnN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYgF,QAASb,KAAKiL,MACxBrP,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,eAGJD,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CAASiN,MAAM,iBAAiBC,UAAU,SACxCnN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYgF,QAASb,KAAKkL,eACxBtP,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,kBAKRD,EAAAC,EAAAC,cAACkR,GAAD,CAAanK,MAAO5E,EAAO2C,SAAUZ,KAAK4K,oBAC1ChP,EAAAC,EAAAC,cAAA,OAAK4E,IAAK,SAAAuM,GAAO,OAAIJ,EAAKtB,UAAY0B,IACpCrR,EAAAC,EAAAC,cAACgK,GAAAjK,EAAD,KACED,EAAAC,EAAAC,cAACoR,GAAD,CAAc3K,WAAYA,EAAYtE,MAAOA,IAC5CkK,GAAWvM,EAAAC,EAAAC,cAAC0M,EAAA3M,EAAD,gBA7FamB,aCN/BmQ,GAAQC,yBAAe,CAC3BC,QAAS,CACP7G,QAAS8G,IACT7G,UAAW8G,OAIMC,oLAEjB,OACE5R,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQkR,SAAUC,aAChB9R,EAAAC,EAAAC,cAAC6R,EAAA,iBAAD,CAAkBR,MAAOA,IACvBvR,EAAAC,EAAAC,cAAC8R,EAAA/R,EAAD,MACAD,EAAAC,EAAAC,cAAC+R,EAAD,MACAjS,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMqE,WAAS,EAACE,QAAQ,UACtBxE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMwE,MAAI,EAAC0G,GAAI,GAAI+G,GAAI,EAAGzR,MAAO,CAAEyK,QAAS,KAC1ClL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOwR,OAAK,EAAC3K,KAAK,IAAI1G,UAAWsR,IACjCpS,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAO6G,KAAK,QAAQ1G,UAAWiL,KAC/B/L,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAO6G,KAAK,QAAQ1G,UAAWiO,gBAXZ3N,aCV3BiR,GAAcC,QACW,cAA7BrC,OAAO3D,SAASiG,UAEe,UAA7BtC,OAAO3D,SAASiG,UAEhBtC,OAAO3D,SAASiG,SAAS/P,MACvB,2DAsCN,SAASgQ,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTxO,KAAK,SAAA4O,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvP,QACfkP,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAA3C,GACLyC,QAAQzC,MAAM,4CAA6CA,KCzEjE4C,IAASC,OAAOvT,EAAAC,EAAAC,cAACsT,GAAD,MAAS1D,SAAS2D,eAAe,SDclC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAI5B,YAAwB7B,OAAO3D,UAC3CqH,SAAW1D,OAAO3D,SAASqH,OAIvC,OAGF1D,OAAO2D,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAApN,OAAMyM,YAAN,sBAEPO,IAiDV,SAAiCI,GAE/B7K,MAAM6K,GACHxO,KAAK,SAAA4D,GAGkB,MAApBA,EAASgM,SACuD,IAAhEhM,EAAS2I,QAAQxN,IAAI,gBAAgB+N,QAAQ,cAG7C2B,UAAUC,cAAcmB,MAAM7P,KAAK,SAAA4O,GACjCA,EAAakB,aAAa9P,KAAK,WAC7BgM,OAAO3D,SAAS0H,aAKpBxB,GAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEArEAa,CAAwBxB,GAIxBC,UAAUC,cAAcmB,MAAM7P,KAAK,WACjCkP,QAAQC,IACN,+GAMJZ,GAAgBC,MCzCxByB","file":"static/js/main.21724307.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\n\nexport default class Navigation extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: 1 }}>\n            <Link to=\"/\">Rankings</Link>\n          </Typography>\n          <IconButton component=\"a\" href=\"https://github.com/jonatanklosko/rankings\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src=\"https://png.icons8.com/ios-glyphs/32/ffffff/github.png\" alt=\"GitHub\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n","export const resultToString = (result, eventId, format) => {\n  if (eventId === '333fm') {\n    switch (format) {\n      case 'single': return result;\n      case 'average': return (result / 100).toFixed(2);\n      default: throw new Error(`Unrecognized format type: ${format}`);\n    }\n  } else if (eventId === '333mbf') {\n    const missed = result % 100\n    result = Math.floor(result / 100);\n    const timeSeconds = result % 100000;\n    result = Math.floor(result / 100000);\n    const difference = 99 - (result % 100)\n    const solved = difference + missed\n    const attempted = solved + missed\n    const formattedTime = centisecondsToClockFormat(timeSeconds * 100).replace(/\\.00$/, '');\n    return `${solved}/${attempted} ${formattedTime}`;\n  } else {\n    return centisecondsToClockFormat(result);\n  }\n};\n\nconst centisecondsToClockFormat = centiseconds => {\n  const date = new Date(null);\n  date.setMilliseconds(centiseconds * 10);\n  return date.toISOString().substr(11, 11).replace(/^[0:]*(?!\\.)/g, '');\n};\n\nexport const readWcaIdsFromFile = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = event => {\n      const text = event.target.result;\n      resolve(text.match(/\\d{4}[A-Za-z]{4}\\d{2}/g) || []);\n    };\n    reader.onerror = reject;\n    reader.readAsText(file);\n  });\n};\n","const googleUrlShortenerApiUrl = 'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyCgOHkmUMcWKJ0tRlwEs-rzBZ1WA7sTZTI';\n\nexport const shortenUrl = longUrl =>\n  fetch(googleUrlShortenerApiUrl, {\n    method: 'POST',\n    body: JSON.stringify({ longUrl }),\n    headers: { 'Content-Type': 'application/json' }\n  })\n  .then(response => response.json())\n  .then(data => data.error ? Promise.reject(data.error) : data.id);\n\nexport const rankingFromSearchParams = search => {\n  const params = new URLSearchParams(search);\n  return {\n    wcaIds: params.get('wcaids') ? params.get('wcaids').split(',') : [],\n    name: params.get('name') || ''\n  };\n};\n\nexport const rankingToSearchParams = ({ name, wcaIds }) =>\n  new URLSearchParams({ name, wcaids: wcaIds.join(',') }).toString();\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom';\n\nimport { readWcaIdsFromFile } from '../logic/utils';\nimport { rankingToSearchParams } from '../logic/url-utils';\n\nexport default class Navigation extends Component {\n  state = {\n    redirectPath: null\n  };\n\n  importPeople = () => {\n    this.fileInput.click();\n  };\n\n  handleFileChange = event => {\n    if (event.target.files.length > 0) {\n      readWcaIdsFromFile(event.target.files[0])\n        .then(wcaIds =>\n          this.setState({\n            redirectPath: '/edit?' + rankingToSearchParams({ name: '', wcaIds })\n          })\n        );\n    }\n  };\n\n  render() {\n    const { redirectPath } = this.state\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <Grid container spacing={24} justify=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\">What is it?</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle1\">\n            <a href=\"https://www.worldcubeassociation.org/results/events.php\" target=\"_blank\" rel=\"noopener noreferrer\">WCA</a>-like\n            rankings created by you!\n            Select a group of people and see how they are doing compared to each other.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Grid container spacing={8}>\n            <Grid item>\n              <Button variant=\"outlined\" component={Link} to=\"/edit\">\n                Go ahead and create one!\n              </Button>\n            </Grid>\n            <input type=\"file\" style={{ display: 'none' }} ref={input => this.fileInput = input} onChange={this.handleFileChange} />\n            <Grid item>\n              <Button variant=\"outlined\" onClick={this.importPeople}>\n                Import people from file\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import _ from 'lodash';\n\nexport const searchPeople = query =>\n  apiFetch(`/search/users?persons_table=true&q=${query}`)\n    .then(data => data.result);\n\nconst personDataByWcaIdCache = new Map();\n\nexport const getPeopleByWcaIds = wcaIds => {\n  const [cachedWcaIds, wcaIdsToFetch] = _.partition(wcaIds, wcaId => personDataByWcaIdCache.has(wcaId));\n  const cachedPeopleData = _.map(cachedWcaIds, wcaId => personDataByWcaIdCache.get(wcaId));\n  const promises = _.map(_.chunk(wcaIdsToFetch, 100), wcaIdsSubset =>\n    apiFetch(`/persons?per_page=100&wca_ids=${wcaIdsSubset.join(',')}`)\n  );\n  return Promise.all(promises)\n    .then(_.flatten)\n    .then(peopleData =>\n      peopleData.map(({ personalRecords, ...rest }) => (\n        /* Revert camelization of event ids. */\n        { ...rest, personalRecords: _.mapKeys(personalRecords, (value, key) => _.toLower(key)) }\n      ))\n    )\n    .then(peopleData => {\n      _.each(peopleData, personData => personDataByWcaIdCache.set(personData.person.wcaId, personData));\n      return peopleData.concat(cachedPeopleData);\n    });\n}\n\nconst apiFetch = (path, fetchOptions = {}) => {\n  const baseApiUrl = \"https://www.worldcubeassociation.org/api/v0\";\n\n  return fetch(`${baseApiUrl}${path}`, fetchOptions)\n    .then(response => response.json())\n    .then(camelizeKeysDeep);\n};\n\nconst camelizeKeysDeep = object =>\n  _.isArray(object)\n    ? _.map(object, camelizeKeysDeep)\n    : _.mapValues(\n        _.mapKeys(object, (value, key) => _.camelCase(key)),\n        value => _.isObject(value) ? camelizeKeysDeep(value) : value\n      );\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Downshift from 'downshift';\nimport _ from 'lodash';\n\nimport { searchPeople } from '../logic/wca-api';\nimport './WcaPersonSelect.css';\n\nexport default class WcaPersonSelect extends Component {\n  state = {\n    peopleFound: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.findPeopleDebounced = _.debounce(this.findPeople, 300);\n  }\n\n  findPeople = query => {\n    if (query) {\n      searchPeople(query).then(people => this.setState({ peopleFound: people }));\n    } else {\n      this.setState({ peopleFound: [] });\n    }\n  };\n\n  handleChange = (person, { clearSelection }) => {\n    const { onChange, clearOnChange } = this.props;\n    person && onChange(person);\n    clearOnChange && clearSelection();\n  };\n\n  render() {\n    const { fullWidth, label } = this.props;\n\n    return (\n      <Downshift\n        onChange={this.handleChange}\n        itemToString={person => _.get(person, 'name', '')}\n        onInputValueChange={this.findPeopleDebounced}\n      >\n        {({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n          <div className=\"wca-person-select\">\n            <TextField {...getInputProps({ fullWidth, label })} />\n            {isOpen && (\n              <Paper square className=\"options-list\">\n                {this.state.peopleFound.map((person, index) => (\n                  <MenuItem {...getItemProps({\n                    item: person,\n                    selected: highlightedIndex === index,\n                    key: person.id\n                  })}>\n                    <Avatar src={person.avatar.thumbUrl} />\n                    <ListItemText primary={person.name} secondary={person.wcaId} />\n                  </MenuItem>\n                ))}\n              </Paper>\n            )}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport _ from 'lodash';\n\nimport WcaPersonSelect from './WcaPersonSelect';\n\nexport default class EditablePeopleList extends PureComponent {\n  onPersonAdded(person) {\n    this.props.onChange(_.uniqBy([...this.props.people, person], 'wcaId'));\n  }\n\n  onPersonRemoved(person) {\n    this.props.onChange(_.reject(this.props.people, { wcaId: person.wcaId }));\n  }\n\n  render() {\n    return (\n      <Paper elevation={1} style={{ padding: 8 }}>\n        <Grid container spacing={8}>\n          <Grid item xs={12}>\n            <WcaPersonSelect fullWidth label=\"Add person\" clearOnChange onChange={person => this.onPersonAdded(person)} />\n          </Grid>\n          <Grid item xs={12}>\n            <List dense style={{ maxHeight: 200, overflow: 'auto' }}>\n              {this.props.people.map(person => (\n                <ListItem key={person.wcaId}>\n                  <Avatar src={person.avatar.thumbUrl} />\n                  <ListItemText primary={person.name} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={() => this.onPersonRemoved(person)}>\n                      <Icon>delete</Icon>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { getPeopleByWcaIds } from '../logic/wca-api';\nimport { rankingFromSearchParams, rankingToSearchParams } from '../logic/url-utils';\n\nimport EditablePeopleList from './EditablePeopleList';\n\nexport default class RankingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: rankingFromSearchParams(props.location.search),\n      people: [],\n      redirectPath: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    getPeopleByWcaIds(this.state.ranking.wcaIds)\n      .then(peopleData => this.setState({\n        loading: false,\n        people: _.map(peopleData, 'person')\n      }));\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { ranking, people } = this.state;\n    this.setState({\n      redirectPath: '/show?' + rankingToSearchParams({ name: ranking.name, wcaIds: _.map(people, 'wcaId') })\n    });\n  };\n\n  handleNameChange = event => {\n    const { ranking } = this.state;\n    this.setState({\n      ranking: { ...ranking, name: event.target.value }\n    });\n  };\n\n  handlePeopleChange = people => {\n    this.setState({ people });\n  };\n\n  render() {\n    const { redirectPath, ranking, people, loading } = this.state;\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <div>\n        <Typography variant=\"h5\">Edit ranking</Typography>\n        <form onSubmit={this.handleSubmit}>\n          <Grid container direction=\"column\" spacing={16}>\n            <Grid item>\n              <TextField fullWidth label=\"Ranking name\" value={ranking.name} onChange={this.handleNameChange} />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle2\" style={{ marginBottom: 8 }}>\n                People\n              </Typography>\n              {loading ? <LinearProgress /> : (\n                <EditablePeopleList people={people} onChange={this.handlePeopleChange} />\n              )}\n            </Grid>\n            <Grid item>\n              <Button type=\"submit\" variant=\"outlined\">Done</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n","const events = [\n  { id: '333',    name: 'Rubik\\'s Cube',      icon: 'event-333'   },\n  { id: '222',    name: '2x2x2 Cube',         icon: 'event-222'   },\n  { id: '444',    name: '4x4x4 Cube',         icon: 'event-444'   },\n  { id: '555',    name: '5x5x5 Cube',         icon: 'event-555'   },\n  { id: '666',    name: '6x6x6 Cube',         icon: 'event-666'   },\n  { id: '777',    name: '7x7x7 Cube',         icon: 'event-777'   },\n  { id: '333bf',  name: '3x3x3 Blindfolded',  icon: 'event-333bf' },\n  { id: '333fm',  name: '3x3x3 Fewest Moves', icon: 'event-333fm' },\n  { id: '333oh',  name: '3x3x3 One-Handed',   icon: 'event-333oh' },\n  { id: '333ft',  name: '3x3x3 With Feet',    icon: 'event-333ft' },\n  { id: 'minx',   name: 'Megaminx',           icon: 'event-minx'  },\n  { id: 'pyram',  name: 'Pyraminx',           icon: 'event-pyram' },\n  { id: 'clock',  name: 'Rubik\\'s Clock',     icon: 'event-clock' },\n  { id: 'skewb',  name: 'Skewb',              icon: 'event-skewb' },\n  { id: 'sq1',    name: 'Square-1',           icon: 'event-sq1'   },\n  { id: '444bf',  name: '4x4x4 Blindfolded',  icon: 'event-444bf' },\n  { id: '555bf',  name: '5x5x5 Blindfolded',  icon: 'event-555bf' },\n  { id: '333mbf', name: '3x3x3 Multi-Blind',  icon: 'event-333mbf' }\n];\n\nexport default events;\n","import React, { Component } from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport events from '../logic/events';\n\nexport default class EventSelect extends Component {\n  render() {\n    return (\n      <div>\n        {events.map(event => (\n          <Tooltip title={event.name} placement=\"top\" key={event.id}>\n            <IconButton onClick={() => this.props.onChange(event)}>\n              <span\n                className={`cubing-icon ${event.icon}`}\n                style={{ opacity: event.id === this.props.value.id ? 1 : 0.3 }}\n              />\n            </IconButton>\n          </Tooltip>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport _ from 'lodash';\n\nimport './RankingTable.css';\nimport { resultToString } from '../logic/utils';\n\nexport default class RankingTable extends Component {\n  state = {\n    format: 'single'\n  };\n\n  setFormat(format) {\n    this.setState({ format });\n  }\n\n  formattedPersonalBest(personData, format) {\n    const { event } = this.props;\n    const result = _.get(personData, `personalRecords.${event.id}.${format}.best`);\n    return result ? resultToString(result, event.id, format) : '';\n  }\n\n  peopleDataForEvent() {\n    const { event, peopleData } = this.props;\n    const { format } = this.state;\n    return _(peopleData)\n      .filter(`personalRecords.${event.id}.${format}`)\n      .orderBy([`personalRecords.${event.id}.${format}.localRank`])\n      .value();\n  }\n\n  render() {\n    const { format } = this.state;\n\n    return (\n      <div className=\"ranking-table-container\">\n        <Table className={`sort-by-${format}`}>\n          <TableHead className=\"ranking-table-head\">\n            <TableRow>\n              <TableCell padding=\"dense\"></TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell numeric className=\"single\" onClick={() => this.setFormat('single')}>\n                Single\n              </TableCell>\n              <TableCell numeric className=\"average\" onClick={() => this.setFormat('average')}>\n                Average\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.peopleDataForEvent().map(personData => (\n              <TableRow key={personData.person.wcaId}>\n                <TableCell padding=\"dense\">\n                  {personData.personalRecords[this.props.event.id][format].localRank}\n                </TableCell>\n                <TableCell>\n                  <a href={personData.person.url} target=\"_blank\" rel=\"noopener noreferrer\">{personData.person.name}</a>\n                </TableCell>\n                <TableCell numeric className=\"single\">\n                  {this.formattedPersonalBest(personData, 'single')}\n                </TableCell>\n                <TableCell numeric className=\"average\">\n                  {this.formattedPersonalBest(personData, 'average')}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport clipboard from 'clipboard-polyfill';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\nimport html2canvas from 'html2canvas';\n\nimport { getPeopleByWcaIds } from '../logic/wca-api';\nimport { shortenUrl, rankingFromSearchParams, rankingToSearchParams } from '../logic/url-utils';\nimport EventSelect from './EventSelect';\nimport RankingTable from './RankingTable';\n\nimport events from '../logic/events';\n\nexport default class Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: rankingFromSearchParams(props.location.search),\n      peopleData: [],\n      event: events[0],\n      shortUrl: window.location.href, /* Use the long URL until the short one is fetched. */\n      redirectPath: null,\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    getPeopleByWcaIds(this.state.ranking.wcaIds)\n      .then(peopleData => this.setState({\n        loading: false,\n        peopleData: this.withLocalRanks(peopleData)\n      }));\n    shortenUrl(window.location.href)\n      .then(shortUrl => this.setState({ shortUrl }));\n  }\n\n  withLocalRanks(peopleData) {\n    _.each(events, event => {\n      _.each(['single', 'average'], format => {\n        const filteredPeopleData = _.filter(peopleData, `personalRecords.${event.id}.${format}`);\n        const worldRanks = _.sortBy(_.map(filteredPeopleData, `personalRecords.${event.id}.${format}.worldRank`));\n        _.each(filteredPeopleData, ({ personalRecords }) => {\n          const record = personalRecords[event.id][format];\n          record.localRank = _.indexOf(worldRanks, record.worldRank) + 1;\n        })\n      });\n    });\n    return peopleData;\n  }\n\n  handleEventChange = event => {\n    this.setState({ event });\n  };\n\n  copyUrl = () => {\n    clipboard.writeText(this.state.shortUrl);\n  };\n\n  edit = () => {\n    const { ranking, peopleData } = this.state;\n    this.setState({\n      redirectPath: '/edit?' + rankingToSearchParams({ name: ranking.name, wcaIds: _.map(peopleData, 'person.wcaId') })\n    });\n  };\n\n  downloadImage = () => {\n    const { event, ranking } = this.state;\n    const rankingName = ranking.name.toLowerCase().replace(/\\s+/, '-');\n    const filename = `rankings-${rankingName}-${event.id}.png`;\n    html2canvas(this.imageArea, { logging: false }).then(canvas => {\n      const a = document.createElement('a');\n      a.download = filename;\n      a.href = canvas.toDataURL();\n      a.click();\n    });\n  };\n\n  render() {\n    const { redirectPath, ranking, peopleData, event, loading } = this.state;\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <div style={{ textAlign: 'center' }}>\n        <Typography variant=\"h5\">\n          {ranking.name}\n          <div style={{ display: 'inline-block' }}>\n            <Tooltip title=\"Copy URL\" placement=\"right\">\n              <IconButton onClick={this.copyUrl}>\n                <Icon>link</Icon>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Edit\" placement=\"right\">\n              <IconButton onClick={this.edit}>\n                <Icon>edit</Icon>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Download image\" placement=\"right\">\n              <IconButton onClick={this.downloadImage}>\n                <Icon>photo</Icon>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Typography>\n        <EventSelect value={event} onChange={this.handleEventChange} />\n        <div ref={element => this.imageArea = element}>\n          <Paper>\n            <RankingTable peopleData={peopleData} event={event} />\n            {loading && <LinearProgress />}\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport RankingForm from './RankingForm';\nimport Ranking from './Ranking';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: blueGrey,\n  },\n});\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Navigation />\n          <Grid container justify=\"center\">\n            <Grid item xs={12} md={8} style={{ padding: 16 }}>\n              <Route exact path=\"/\" component={Home}/>\n              <Route path=\"/edit\" component={RankingForm}/>\n              <Route path=\"/show\" component={Ranking}/>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}