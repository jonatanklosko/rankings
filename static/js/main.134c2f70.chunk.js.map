{"version":3,"sources":["components/github.svg","components/Navigation.js","logic/utils.js","logic/url-utils.js","components/Home.js","logic/wca-api.js","components/WcaPersonSelect.js","components/EditablePeopleList.js","components/RankingForm.js","logic/events.js","components/EventSelect.js","components/RankingTable.js","components/Ranking.js","components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Navigation","Component","render","position","color","variant","style","flexGrow","to","component","href","target","rel","src","githubLogoUrl","height","width","alt","centisecondsToClockFormat","centiseconds","date","Date","setMilliseconds","toISOString","substr","replace","rankingFromSearchParams","search","params","URLSearchParams","wcaIds","get","array","split","Set","name","rankingToSearchParams","wcaids","join","toString","state","redirectPath","importPeople","this","fileInput","click","handleFileChange","event","file","files","length","Promise","resolve","reject","reader","FileReader","onload","text","result","match","onerror","readAsText","then","setState","container","spacing","justify","item","Link","type","display","ref","input","onChange","onClick","personDataByWcaIdCache","Map","getPeopleByWcaIds","_","partition","wcaId","has","cachedWcaIds","wcaIdsToFetch","slice","cachedPeopleData","map","promises","chunk","wcaIdsSubset","apiFetch","all","flatten","peopleData","personalRecords","rest","mapKeys","value","key","toLower","each","personData","set","person","concat","path","fetchOptions","fetch","response","json","camelizeKeysDeep","object","isArray","mapValues","camelCase","isObject","WcaPersonSelect","constructor","props","super","peopleFound","findPeople","query","data","searchPeople","people","handleChange","clearSelection","clearOnChange","findPeopleDebounced","debounce","fullWidth","label","itemToString","onInputValueChange","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","className","square","index","selected","id","avatar","thumbUrl","primary","secondary","EditablePeopleList","PureComponent","onPersonAdded","uniqBy","onPersonRemoved","elevation","padding","xs","dense","maxHeight","overflow","sortBy","RankingForm","handleSubmit","preventDefault","ranking","handleNameChange","handlePeopleChange","location","loading","componentDidMount","onSubmit","direction","marginBottom","events","icon","EventSelect","title","placement","opacity","RankingTable","format","setFormat","formattedPersonalBest","eventId","missed","timeSeconds","Math","floor","solved","attempted","formattedTime","toFixed","Error","resultToString","peopleDataForEvent","filter","orderBy","numeric","localRank","url","Ranking","handleEventChange","copyUrl","clipboard","writeText","shortUrl","edit","downloadImage","rankingName","toLowerCase","filename","html2canvas","imageArea","logging","canvas","a","document","createElement","download","toDataURL","window","withLocalRanks","filteredPeopleData","worldRanks","record","indexOf","worldRank","textAlign","element","theme","createMuiTheme","palette","blue","blueGrey","App","basename","process","md","exact","Home","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","getElementById","URL","origin","addEventListener","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,oC,oXCS5B,MAAMC,UAAmBC,YACtCC,SACE,OACE,kBAAC,IAAD,CAAQC,SAAS,SAASC,MAAM,WAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,QAAQ,KAAKD,MAAM,UAAUE,MAAO,CAAEC,SAAU,IAC1D,kBAAC,IAAD,CAAMC,GAAG,KAAT,aAEF,kBAAC,IAAD,CAAYC,UAAU,IAAIC,KAAK,4CAA4CC,OAAO,SAASC,IAAI,uBAC7F,yBAAKC,IAAKC,IAAeC,OAAO,KAAKC,MAAM,KAAKC,IAAI,e,qBClBzD,MAsBDC,EAA4BC,IAChC,MAAMC,EAAO,IAAIC,KAAK,MAEtB,OADAD,EAAKE,gBAA+B,GAAfH,GACdC,EAAKG,cAAcC,OAAO,GAAI,IAAIC,QAAQ,gBAAiB,KCZvDC,EAA0BC,IACrC,MAAMC,EAAS,IAAIC,gBAAgBF,GACnC,MAAO,CACLG,OAAQF,EAAOG,IAAI,WDwBHC,ECxBoBJ,EAAOG,IAAI,UAAUE,MAAM,KDyBjE,IAAI,IAAIC,IAAIF,KCzB6D,GACvEG,KAAMP,EAAOG,IAAI,SAAW,IDuBZC,OCnBPI,EAAwB,EAAGD,OAAML,YAC5C,IAAID,gBAAgB,CAAEM,OAAME,OAAQP,EAAOQ,KAAK,OAAQC,WCZ3C,MAAMvC,UAAmBC,YAAW,eAAD,oBAChDuC,MAAQ,CACNC,aAAc,MAFgC,KAKhDC,aAAe,KACbC,KAAKC,UAAUC,SAN+B,KAShDC,iBAAmBC,IFSaC,MER1BD,EAAMpC,OAAOsC,MAAMC,OAAS,IFQFF,EEPTD,EAAMpC,OAAOsC,MAAM,GFQnC,IAAIE,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAST,IACd,MAAMU,EAAOV,EAAMpC,OAAO+C,OAC1BN,EAAQK,EAAKE,MAAM,2BAA6B,KAElDL,EAAOM,QAAUP,EACjBC,EAAOO,WAAWb,MEdbc,KAAKhC,GACJa,KAAKoB,SAAS,CACZtB,aAAc,SAAWL,EAAsB,CAAED,KAAM,GAAIL,eAMrE5B,SAAU,MACAuC,EAAiBE,KAAKH,MAAtBC,aAER,OAAOA,EAAe,kBAAC,IAAD,CAAUjC,GAAIiC,IAClC,kBAAC,IAAD,CAAMuB,WAAS,EAACC,QAAS,GAAIC,QAAQ,UACnC,kBAAC,IAAD,CAAMC,MAAI,GACR,kBAAC,IAAD,CAAY9D,QAAQ,MAApB,gBAEF,kBAAC,IAAD,CAAM8D,MAAI,GACR,kBAAC,IAAD,CAAY9D,QAAQ,aAClB,uBAAGK,KAAK,0DAA0DC,OAAO,SAASC,IAAI,uBAAtF,OADF,+GAMF,kBAAC,IAAD,CAAMuD,MAAI,GACR,kBAAC,IAAD,CAAMH,WAAS,EAACC,QAAS,GACvB,kBAAC,IAAD,CAAME,MAAI,GACR,kBAAC,IAAD,CAAQ9D,QAAQ,WAAWI,UAAW2D,IAAM5D,GAAG,SAA/C,6BAIF,2BAAO6D,KAAK,OAAO/D,MAAO,CAAEgE,QAAS,QAAUC,IAAKC,GAAS7B,KAAKC,UAAY4B,EAAOC,SAAU9B,KAAKG,mBACpG,kBAAC,IAAD,CAAMqB,MAAI,GACR,kBAAC,IAAD,CAAQ9D,QAAQ,WAAWqE,QAAS/B,KAAKD,cAAzC,gC,gFCpDd,MAMMiC,EAAyB,IAAIC,IAEtBC,EAAoB/C,IAAW,MAAD,EACAgD,IAAEC,UAAUjD,EAAQkD,GAASL,EAAuBM,IAAID,IADxD,mBAClCE,EADkC,KAEnCC,EAFmC,KAEFC,MAAM,EAVnB,KAWpBC,EAAmBP,IAAEQ,IAAIJ,EAAcF,GAASL,EAAuB5C,IAAIiD,IAC3EO,EAAWT,IAAEQ,IAAIR,IAAEU,MAAML,EAAe,KAAMM,GAClDC,EAAS,iCAAD,OAAkCD,EAAanD,KAAK,QAE9D,OAAOa,QAAQwC,IAAIJ,GAChBzB,KAAKgB,IAAEc,SACP9B,KAAK+B,GACJA,EAAWP,IAAK,IAAD,IAAGQ,EAAH,EAAGA,gBAAoBC,EAAvB,qDACb,CADa,GAERA,EAFQ,CAEFD,gBAAiBhB,IAAEkB,QAAQF,EAAiB,CAACG,EAAOC,IAAQpB,IAAEqB,QAAQD,SAGpFpC,KAAK+B,IACJf,IAAEsB,KAAKP,EAAYQ,GAAc1B,EAAuB2B,IAAID,EAAWE,OAAOvB,MAAOqB,IAC9ER,EAAWW,OAAOnB,MAIzBK,EAAW,CAACe,EAAMC,EAAe,KAG9BC,MAAM,GAAD,OAFO,+CAEP,OAAiBF,GAAQC,GAClC5C,KAAK8C,GAAYA,EAASC,QAC1B/C,KAAKgD,GAGJA,EAAmBC,GACvBjC,IAAEkC,QAAQD,GACNjC,IAAEQ,IAAIyB,EAAQD,GACdhC,IAAEmC,UACAnC,IAAEkB,QAAQe,EAAQ,CAACd,EAAOC,IAAQpB,IAAEoC,UAAUhB,IAC9CD,GAASnB,IAAEqC,SAASlB,GAASa,EAAiBb,GAASA,G,4KChChD,MAAMmB,WAAwBnH,YAK3CoH,YAAYC,GACVC,MAAMD,GADW,KAJnB9E,MAAQ,CACNgF,YAAa,IAGI,KAKnBC,WAAaC,IACPA,EDnBoBA,IAC1BhC,EAAS,sCAAD,OAAuCgC,IAC5C5D,KAAK6D,GAAQA,EAAKjE,QCkBjBkE,CAAaF,GAAO5D,KAAK+D,GAAUlF,KAAKoB,SAAS,CAAEyD,YAAaK,KAEhElF,KAAKoB,SAAS,CAAEyD,YAAa,MATd,KAanBM,aAAe,CAACvB,GAAUwB,qBAAsB,MAAD,EACTpF,KAAK2E,MAAjC7C,EADqC,EACrCA,SAAUuD,EAD2B,EAC3BA,cAClBzB,GAAU9B,EAAS8B,GACnByB,GAAiBD,KAdjBpF,KAAKsF,oBAAsBnD,IAAEoD,SAASvF,KAAK8E,WAAY,KAiBzDvH,SAAU,MAAD,EACsByC,KAAK2E,MAA1Ba,EADD,EACCA,UAAWC,EADZ,EACYA,MAEnB,OACE,kBAAC,KAAD,CACE3D,SAAU9B,KAAKmF,aACfO,aAAc9B,GAAUzB,IAAE/C,IAAIwE,EAAQ,OAAQ,IAC9C+B,mBAAoB3F,KAAKsF,qBAExB,EAAGM,gBAAeC,eAAcC,SAAQC,aAAYC,sBACnD,yBAAKC,UAAU,qBACb,kBAAC,IAAcL,EAAc,CAAEJ,YAAWC,WACzCK,GACC,kBAAC,KAAD,CAAOI,QAAM,EAACD,UAAU,gBACrBjG,KAAKH,MAAMgF,YAAYlC,IAAI,CAACiB,EAAQuC,IACnC,kBAAC,KAAaN,EAAa,CACzBrE,KAAMoC,EACNwC,SAAUJ,IAAqBG,EAC/B5C,IAAKK,EAAOyC,KAEZ,kBAAC,KAAD,CAAQnI,IAAK0F,EAAO0C,OAAOC,WAC3B,kBAAC,KAAD,CAAcC,QAAS5C,EAAOpE,KAAMiH,UAAW7C,EAAOvB,cC3C3D,MAAMqE,WAA2BC,gBAC9CC,cAAchD,GACZ5D,KAAK2E,MAAM7C,SAASK,IAAE0E,OAAO,IAAI7G,KAAK2E,MAAMO,OAAQtB,GAAS,UAG/DkD,gBAAgBlD,GACd5D,KAAK2E,MAAM7C,SAASK,IAAEzB,OAAOV,KAAK2E,MAAMO,OAAQ,CAAE7C,MAAOuB,EAAOvB,SAGlE9E,SACE,OACE,kBAAC,KAAD,CAAOwJ,UAAW,EAAGpJ,MAAO,CAAEqJ,QAAS,IACrC,kBAAC,IAAD,CAAM3F,WAAS,EAACC,QAAS,GACvB,kBAAC,IAAD,CAAME,MAAI,EAACyF,GAAI,IACb,kBAAC,GAAD,CAAiBzB,WAAS,EAACC,MAAM,aAAaJ,eAAa,EAACvD,SAAU8B,GAAU5D,KAAK4G,cAAchD,MAErG,kBAAC,IAAD,CAAMpC,MAAI,EAACyF,GAAI,IACb,kBAAC,IAAD,CAAMC,OAAK,EAACvJ,MAAO,CAAEwJ,UAAW,IAAKC,SAAU,SAC5CjF,IAAEkF,OAAOrH,KAAK2E,MAAMO,OAAQ,QAAQvC,IAAIiB,GACvC,kBAAC,IAAD,CAAUL,IAAKK,EAAOvB,OACpB,kBAAC,KAAD,CAAQnE,IAAK0F,EAAO0C,OAAOC,WAC3B,kBAAC,KAAD,CAAcC,QAAS5C,EAAOpE,OAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYuC,QAAS,IAAM/B,KAAK8G,gBAAgBlD,IAC9C,kBAAC,KAAD,wBCxBP,MAAM0D,WAAoBhK,YACvCoH,YAAYC,GACVC,MAAMD,GADW,KAkBnB4C,aAAenH,IACbA,EAAMoH,iBADgB,QAEMxH,KAAKH,MAAzB4H,EAFc,EAEdA,QAASvC,EAFK,EAELA,OACjBlF,KAAKoB,SAAS,CACZtB,aAAc,SAAWL,EAAsB,CAAED,KAAMiI,EAAQjI,KAAML,OAAQgD,IAAEQ,IAAIuC,EAAQ,cAtB5E,KA0BnBwC,iBAAmBtH,IAAU,MACnBqH,EAAYzH,KAAKH,MAAjB4H,QACRzH,KAAKoB,SAAS,CACZqG,QAAQ,eAAMA,EAAP,CAAgBjI,KAAMY,EAAMpC,OAAOsF,WA7B3B,KAiCnBqE,mBAAqBzC,IACnBlF,KAAKoB,SAAS,CAAE8D,YAhChBlF,KAAKH,MAAQ,CACX4H,QAAS1I,EAAwB4F,EAAMiD,SAAS5I,QAChDkG,OAAQ,GACRpF,aAAc,KACd+H,SAAS,GAIbC,oBACE5F,EAAkBlC,KAAKH,MAAM4H,QAAQtI,QAClCgC,KAAK+B,GAAclD,KAAKoB,SAAS,CAChCyG,SAAS,EACT3C,OAAQ/C,IAAEQ,IAAIO,EAAY,aAuBhC3F,SAAU,MAAD,EAC4CyC,KAAKH,MAAhDC,EADD,EACCA,aAAc2H,EADf,EACeA,QAASvC,EADxB,EACwBA,OAAQ2C,EADhC,EACgCA,QAEvC,OAAO/H,EAAe,kBAAC,IAAD,CAAUjC,GAAIiC,IAClC,6BACE,kBAAC,IAAD,CAAYpC,QAAQ,MAApB,gBACA,0BAAMqK,SAAU/H,KAAKuH,cACnB,kBAAC,IAAD,CAAMlG,WAAS,EAAC2G,UAAU,SAAS1G,QAAS,IAC1C,kBAAC,IAAD,CAAME,MAAI,GACR,kBAAC,IAAD,CAAWgE,WAAS,EAACC,MAAM,eAAenC,MAAOmE,EAAQjI,KAAMsC,SAAU9B,KAAK0H,oBAEhF,kBAAC,IAAD,CAAMlG,MAAI,GACR,kBAAC,IAAD,CAAY9D,QAAQ,YAAYC,MAAO,CAAEsK,aAAc,IAAvD,UAGCJ,EAAU,kBAAC,IAAD,MACT,kBAAC,GAAD,CAAoB3C,OAAQA,EAAQpD,SAAU9B,KAAK2H,sBAGvD,kBAAC,IAAD,CAAMnG,MAAI,GACR,kBAAC,IAAD,CAAQE,KAAK,SAAShE,QAAQ,YAA9B,a,kECnDCwK,OArBA,CACb,CAAE7B,GAAI,MAAU7G,KAAM,eAAsB2I,KAAM,aAClD,CAAE9B,GAAI,MAAU7G,KAAM,aAAsB2I,KAAM,aAClD,CAAE9B,GAAI,MAAU7G,KAAM,aAAsB2I,KAAM,aAClD,CAAE9B,GAAI,MAAU7G,KAAM,aAAsB2I,KAAM,aAClD,CAAE9B,GAAI,MAAU7G,KAAM,aAAsB2I,KAAM,aAClD,CAAE9B,GAAI,MAAU7G,KAAM,aAAsB2I,KAAM,aAClD,CAAE9B,GAAI,QAAU7G,KAAM,oBAAsB2I,KAAM,eAClD,CAAE9B,GAAI,QAAU7G,KAAM,qBAAsB2I,KAAM,eAClD,CAAE9B,GAAI,QAAU7G,KAAM,mBAAsB2I,KAAM,eAClD,CAAE9B,GAAI,QAAU7G,KAAM,kBAAsB2I,KAAM,eAClD,CAAE9B,GAAI,OAAU7G,KAAM,WAAsB2I,KAAM,cAClD,CAAE9B,GAAI,QAAU7G,KAAM,WAAsB2I,KAAM,eAClD,CAAE9B,GAAI,QAAU7G,KAAM,gBAAsB2I,KAAM,eAClD,CAAE9B,GAAI,QAAU7G,KAAM,QAAsB2I,KAAM,eAClD,CAAE9B,GAAI,MAAU7G,KAAM,WAAsB2I,KAAM,aAClD,CAAE9B,GAAI,QAAU7G,KAAM,oBAAsB2I,KAAM,eAClD,CAAE9B,GAAI,QAAU7G,KAAM,oBAAsB2I,KAAM,eAClD,CAAE9B,GAAI,SAAU7G,KAAM,oBAAsB2I,KAAM,iBCZrC,MAAMC,WAAoB9K,YACvCC,SACE,OACE,6BACG2K,GAAOvF,IAAIvC,GACV,kBAAC,KAAD,CAASiI,MAAOjI,EAAMZ,KAAM8I,UAAU,MAAM/E,IAAKnD,EAAMiG,IACrD,kBAAC,IAAD,CAAYtE,QAAS,IAAM/B,KAAK2E,MAAM7C,SAAS1B,IAC7C,0BACE6F,UAAS,sBAAiB7F,EAAM+H,MAChCxK,MAAO,CAAE4K,QAASnI,EAAMiG,KAAOrG,KAAK2E,MAAMrB,MAAM+C,GAAK,EAAI,W,kHCJ1D,MAAMmC,WAAqBlL,YAAW,eAAD,oBAClDuC,MAAQ,CACN4I,OAAQ,UAGVC,UAAUD,GACRzI,KAAKoB,SAAS,CAAEqH,WAGlBE,sBAAsBjF,EAAY+E,GAAS,MACjCrI,EAAUJ,KAAK2E,MAAfvE,MACFW,EAASoB,IAAE/C,IAAIsE,EAAN,0BAAqCtD,EAAMiG,GAA3C,YAAiDoC,EAAjD,UACf,OAAO1H,ETvBmB,EAACA,EAAQ6H,EAASH,KAC9C,GAAgB,UAAZG,EAMG,IAAgB,WAAZA,EAAsB,CAC/B,MAAMC,EAAS9H,EAAS,IAElB+H,GADN/H,EAASgI,KAAKC,MAAMjI,EAAS,MACA,IAGvBkI,EADa,IADnBlI,EAASgI,KAAKC,MAAMjI,EAAS,MACK,IACN8H,EACtBK,EAAYD,EAASJ,EACrBM,EAAgB5K,EAAwC,IAAduK,GAAmBhK,QAAQ,QAAS,IACpF,MAAM,GAAN,OAAUmK,EAAV,YAAoBC,EAApB,YAAiCC,GAEjC,OAAO5K,EAA0BwC,GAhBjC,OAAQ0H,GACN,IAAK,SAAU,OAAO1H,EACtB,IAAK,UAAW,OAAQA,EAAS,KAAKqI,QAAQ,GAC9C,QAAS,MAAM,IAAIC,MAAJ,oCAAuCZ,MSkBxCa,CAAevI,EAAQX,EAAMiG,GAAIoC,GAAU,GAG7Dc,qBAAsB,MAAD,EACWvJ,KAAK2E,MAA3BvE,EADW,EACXA,MAAO8C,EADI,EACJA,WACPuF,EAAWzI,KAAKH,MAAhB4I,OACR,OAAOtG,IAAEe,GACNsG,OADI,0BACsBpJ,EAAMiG,GAD5B,YACkCoC,IACtCgB,QAAQ,CAAC,mBAAD,OAAoBrJ,EAAMiG,GAA1B,YAAgCoC,EAAhC,gBACRnF,QAGL/F,SAAU,MACAkL,EAAWzI,KAAKH,MAAhB4I,OAER,OACE,yBAAKxC,UAAU,2BACb,kBAAC,KAAD,CAAOA,UAAS,kBAAawC,IAC3B,kBAAC,KAAD,CAAWxC,UAAU,sBACnB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAWe,QAAQ,UACnB,kBAAC,KAAD,aACA,kBAAC,KAAD,CAAW0C,SAAO,EAACzD,UAAU,SAASlE,QAAS,IAAM/B,KAAK0I,UAAU,WAApE,UAGA,kBAAC,KAAD,CAAWgB,SAAO,EAACzD,UAAU,UAAUlE,QAAS,IAAM/B,KAAK0I,UAAU,YAArE,aAKJ,kBAAC,KAAD,KACG1I,KAAKuJ,qBAAqB5G,IAAIe,GAC7B,kBAAC,KAAD,CAAUH,IAAKG,EAAWE,OAAOvB,OAC/B,kBAAC,KAAD,CAAW2E,QAAQ,SAChBtD,EAAWP,gBAAgBnD,KAAK2E,MAAMvE,MAAMiG,IAAIoC,GAAQkB,WAE3D,kBAAC,KAAD,KACE,uBAAG5L,KAAM2F,EAAWE,OAAOgG,IAAK5L,OAAO,SAASC,IAAI,uBAAuByF,EAAWE,OAAOpE,OAE/F,kBAAC,KAAD,CAAWkK,SAAO,EAACzD,UAAU,UAC1BjG,KAAK2I,sBAAsBjF,EAAY,WAE1C,kBAAC,KAAD,CAAWgG,SAAO,EAACzD,UAAU,WAC1BjG,KAAK2I,sBAAsBjF,EAAY,kBC/C3C,MAAMmG,WAAgBvM,YACnCoH,YAAYC,GACVC,MAAMD,GADW,KAqCnBmF,kBAAoB1J,IAClBJ,KAAKoB,SAAS,CAAEhB,WAtCC,KAyCnB2J,QAAU,KACRC,KAAUC,UAAUjK,KAAKH,MAAMqK,WA1Cd,KA6CnBC,KAAO,KAAO,MAAD,EACqBnK,KAAKH,MAA7B4H,EADG,EACHA,QAASvE,EADN,EACMA,WACjBlD,KAAKoB,SAAS,CACZtB,aAAc,SAAWL,EAAsB,CAAED,KAAMiI,EAAQjI,KAAML,OAAQgD,IAAEQ,IAAIO,EAAY,qBAhDhF,KAoDnBkH,cAAgB,KAAO,MAAD,EACOpK,KAAKH,MAAxBO,EADY,EACZA,MACFiK,EAFc,EACL5C,QACajI,KAAK8K,cAAcxL,QAAQ,MAAO,KACxDyL,EAAQ,mBAAeF,EAAf,YAA8BjK,EAAMiG,GAApC,QACdmE,KAAYxK,KAAKyK,UAAW,CAAEC,SAAS,IAASvJ,KAAKwJ,IACnD,MAAMC,EAAIC,SAASC,cAAc,KACjCF,EAAEG,SAAWR,EACbK,EAAE7M,KAAO4M,EAAOK,YAChBJ,EAAE1K,WA1DJF,KAAKH,MAAQ,CACX4H,QAAS1I,EAAwB4F,EAAMiD,SAAS5I,QAChDkE,WAAY,GACZ9C,MAAO8H,GAAO,GACdgC,SAAUe,OAAOrD,SAAS7J,KAC1B+B,aAAc,KACd+H,SAAS,GAIbC,oBACE5F,EAAkBlC,KAAKH,MAAM4H,QAAQtI,QAClCgC,KAAK+B,GAAclD,KAAKoB,SAAS,CAChCyG,SAAS,EACT3E,WAAYlD,KAAKkL,eAAehI,MAOtCgI,eAAehI,GAWb,OAVAf,IAAEsB,KAAKyE,GAAQ9H,IACb+B,IAAEsB,KAAK,CAAC,SAAU,WAAYgF,IAC5B,MAAM0C,EAAqBhJ,IAAEqH,OAAOtG,EAAT,0BAAwC9C,EAAMiG,GAA9C,YAAoDoC,IACzE2C,EAAajJ,IAAEkF,OAAOlF,IAAEQ,IAAIwI,EAAN,0BAA6C/K,EAAMiG,GAAnD,YAAyDoC,EAAzD,gBAC5BtG,IAAEsB,KAAK0H,EAAoB,EAAGhI,sBAC5B,MAAMkI,EAASlI,EAAgB/C,EAAMiG,IAAIoC,GACzC4C,EAAO1B,UAAYxH,IAAEmJ,QAAQF,EAAYC,EAAOE,WAAa,QAI5DrI,EA8BT3F,SAAU,MAAD,EACuDyC,KAAKH,MAA3DC,EADD,EACCA,aAAc2H,EADf,EACeA,QAASvE,EADxB,EACwBA,WAAY9C,EADpC,EACoCA,MAAOyH,EAD3C,EAC2CA,QAElD,OAAO/H,EAAe,kBAAC,IAAD,CAAUjC,GAAIiC,IAClC,yBAAKnC,MAAO,CAAE6N,UAAW,WACvB,kBAAC,IAAD,CAAY9N,QAAQ,MACjB+J,EAAQjI,KACT,yBAAK7B,MAAO,CAAEgE,QAAS,iBACrB,kBAAC,KAAD,CAAS0G,MAAM,WAAWC,UAAU,SAClC,kBAAC,IAAD,CAAYvG,QAAS/B,KAAK+J,SACxB,kBAAC,KAAD,eAGJ,kBAAC,KAAD,CAAS1B,MAAM,OAAOC,UAAU,SAC9B,kBAAC,IAAD,CAAYvG,QAAS/B,KAAKmK,MACxB,kBAAC,KAAD,eAGJ,kBAAC,KAAD,CAAS9B,MAAM,iBAAiBC,UAAU,SACxC,kBAAC,IAAD,CAAYvG,QAAS/B,KAAKoK,eACxB,kBAAC,KAAD,kBAKR,kBAAC,GAAD,CAAa9G,MAAOlD,EAAO0B,SAAU9B,KAAK8J,oBAC1C,yBAAKlI,IAAK6J,GAAWzL,KAAKyK,UAAYgB,GACpC,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAcvI,WAAYA,EAAY9C,MAAOA,IAC5CyH,GAAW,kBAAC,IAAD,UCpGxB,MAAM6D,GAAQC,yBAAe,CAC3BC,QAAS,CACPpF,QAASqF,IACTpF,UAAWqF,OAIA,MAAMC,WAAYzO,YAC/BC,SACE,OACE,kBAAC,IAAD,CAAQyO,SAAUC,aAChB,kBAAC,mBAAD,CAAkBP,MAAOA,IACvB,kBAAC,IAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAMrK,WAAS,EAACE,QAAQ,UACtB,kBAAC,IAAD,CAAMC,MAAI,EAACyF,GAAI,GAAIiF,GAAI,EAAGvO,MAAO,CAAEqJ,QAAS,KAC1C,kBAAC,IAAD,CAAOmF,OAAK,EAACrI,KAAK,IAAIhG,UAAWsO,IACjC,kBAAC,IAAD,CAAOtI,KAAK,QAAQhG,UAAWwJ,KAC/B,kBAAC,IAAD,CAAOxD,KAAK,QAAQhG,UAAW+L,UCrB7C,MAAMwC,GAAcC,QACW,cAA7BrB,OAAOrD,SAAS2E,UAEe,UAA7BtB,OAAOrD,SAAS2E,UAEhBtB,OAAOrD,SAAS2E,SAASvL,MACvB,2DAsCN,SAASwL,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTtL,KAAK0L,IACJA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBlN,QACf6M,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAMC,IACLH,QAAQG,MAAM,4CAA6CA,KCvEjEC,IAAShQ,OAAO,kBAAC,GAAD,MAASsN,SAAS2C,eAAe,SDYlC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIxB,YAAwBhB,OAAOrD,UAC3C8F,SAAWzC,OAAOrD,SAAS8F,OAIvC,OAGFzC,OAAO0C,iBAAiB,OAAQ,KAC9B,MAAMlB,EAAK,UAAMR,YAAN,sBAEPI,KAiDV,SAAiCI,GAE/BzI,MAAMyI,GACHtL,KAAK8C,IAGkB,MAApBA,EAAS2J,SACuD,IAAhE3J,EAAS4J,QAAQzO,IAAI,gBAAgBkM,QAAQ,cAG7CoB,UAAUC,cAAcmB,MAAM3M,KAAK0L,IACjCA,EAAakB,aAAa5M,KAAK,KAC7B8J,OAAOrD,SAASoG,aAKpBxB,GAAgBC,KAGnBY,MAAM,KACLF,QAAQC,IACN,mEArEAa,CAAwBxB,GAIxBC,UAAUC,cAAcmB,MAAM3M,KAAK,KACjCgM,QAAQC,IACN,+GAMJZ,GAAgBC,MCvCxByB,K","file":"static/js/main.134c2f70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.26a51923.svg\";","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\n\nimport githubLogoUrl from './github.svg';\n\nexport default class Navigation extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: 1 }}>\n            <Link to=\"/\">Rankings</Link>\n          </Typography>\n          <IconButton component=\"a\" href=\"https://github.com/jonatanklosko/rankings\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={githubLogoUrl} height=\"32\" width=\"32\" alt=\"GitHub\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n","export const resultToString = (result, eventId, format) => {\n  if (eventId === '333fm') {\n    switch (format) {\n      case 'single': return result;\n      case 'average': return (result / 100).toFixed(2);\n      default: throw new Error(`Unrecognized format type: ${format}`);\n    }\n  } else if (eventId === '333mbf') {\n    const missed = result % 100\n    result = Math.floor(result / 100);\n    const timeSeconds = result % 100000;\n    result = Math.floor(result / 100000);\n    const difference = 99 - (result % 100)\n    const solved = difference + missed\n    const attempted = solved + missed\n    const formattedTime = centisecondsToClockFormat(timeSeconds * 100).replace(/\\.00$/, '');\n    return `${solved}/${attempted} ${formattedTime}`;\n  } else {\n    return centisecondsToClockFormat(result);\n  }\n};\n\nconst centisecondsToClockFormat = centiseconds => {\n  const date = new Date(null);\n  date.setMilliseconds(centiseconds * 10);\n  return date.toISOString().substr(11, 11).replace(/^[0:]*(?!\\.)/g, '');\n};\n\nexport const readWcaIdsFromFile = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = event => {\n      const text = event.target.result;\n      resolve(text.match(/\\d{4}[A-Za-z]{4}\\d{2}/g) || []);\n    };\n    reader.onerror = reject;\n    reader.readAsText(file);\n  });\n};\n\nexport const uniq = array =>\n  [...new Set(array)];\n","import { uniq } from './utils';\n\nconst googleUrlShortenerApiUrl = 'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyCgOHkmUMcWKJ0tRlwEs-rzBZ1WA7sTZTI';\n\nexport const shortenUrl = longUrl =>\n  fetch(googleUrlShortenerApiUrl, {\n    method: 'POST',\n    body: JSON.stringify({ longUrl }),\n    headers: { 'Content-Type': 'application/json' }\n  })\n  .then(response => response.json())\n  .then(data => data.error ? Promise.reject(data.error) : data.id);\n\nexport const rankingFromSearchParams = search => {\n  const params = new URLSearchParams(search);\n  return {\n    wcaIds: params.get('wcaids') ? uniq(params.get('wcaids').split(',')) : [],\n    name: params.get('name') || ''\n  };\n};\n\nexport const rankingToSearchParams = ({ name, wcaIds }) =>\n  new URLSearchParams({ name, wcaids: wcaIds.join(',') }).toString();\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom';\n\nimport { readWcaIdsFromFile } from '../logic/utils';\nimport { rankingToSearchParams } from '../logic/url-utils';\n\nexport default class Navigation extends Component {\n  state = {\n    redirectPath: null\n  };\n\n  importPeople = () => {\n    this.fileInput.click();\n  };\n\n  handleFileChange = event => {\n    if (event.target.files.length > 0) {\n      readWcaIdsFromFile(event.target.files[0])\n        .then(wcaIds =>\n          this.setState({\n            redirectPath: '/edit?' + rankingToSearchParams({ name: '', wcaIds })\n          })\n        );\n    }\n  };\n\n  render() {\n    const { redirectPath } = this.state\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <Grid container spacing={24} justify=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\">What is it?</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle1\">\n            <a href=\"https://www.worldcubeassociation.org/results/events.php\" target=\"_blank\" rel=\"noopener noreferrer\">WCA</a>-like\n            rankings created by you!\n            Select a group of people and see how they are doing compared to each other.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Grid container spacing={8}>\n            <Grid item>\n              <Button variant=\"outlined\" component={Link} to=\"/edit\">\n                Go ahead and create one!\n              </Button>\n            </Grid>\n            <input type=\"file\" style={{ display: 'none' }} ref={input => this.fileInput = input} onChange={this.handleFileChange} />\n            <Grid item>\n              <Button variant=\"outlined\" onClick={this.importPeople}>\n                Import people from file\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import _ from 'lodash';\n\nconst WCA_IDS_QUERY_LIMIT = 500;\n\nexport const searchPeople = query =>\n  apiFetch(`/search/users?persons_table=true&q=${query}`)\n    .then(data => data.result);\n\nconst personDataByWcaIdCache = new Map();\n\nexport const getPeopleByWcaIds = wcaIds => {\n  const [cachedWcaIds, allWcaIdsToFetch] = _.partition(wcaIds, wcaId => personDataByWcaIdCache.has(wcaId));\n  const wcaIdsToFetch = allWcaIdsToFetch.slice(0, WCA_IDS_QUERY_LIMIT);\n  const cachedPeopleData = _.map(cachedWcaIds, wcaId => personDataByWcaIdCache.get(wcaId));\n  const promises = _.map(_.chunk(wcaIdsToFetch, 100), wcaIdsSubset =>\n    apiFetch(`/persons?per_page=100&wca_ids=${wcaIdsSubset.join(',')}`)\n  );\n  return Promise.all(promises)\n    .then(_.flatten)\n    .then(peopleData =>\n      peopleData.map(({ personalRecords, ...rest }) => (\n        /* Revert camelization of event ids. */\n        { ...rest, personalRecords: _.mapKeys(personalRecords, (value, key) => _.toLower(key)) }\n      ))\n    )\n    .then(peopleData => {\n      _.each(peopleData, personData => personDataByWcaIdCache.set(personData.person.wcaId, personData));\n      return peopleData.concat(cachedPeopleData);\n    });\n}\n\nconst apiFetch = (path, fetchOptions = {}) => {\n  const baseApiUrl = \"https://www.worldcubeassociation.org/api/v0\";\n\n  return fetch(`${baseApiUrl}${path}`, fetchOptions)\n    .then(response => response.json())\n    .then(camelizeKeysDeep);\n};\n\nconst camelizeKeysDeep = object =>\n  _.isArray(object)\n    ? _.map(object, camelizeKeysDeep)\n    : _.mapValues(\n        _.mapKeys(object, (value, key) => _.camelCase(key)),\n        value => _.isObject(value) ? camelizeKeysDeep(value) : value\n      );\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Downshift from 'downshift';\nimport _ from 'lodash';\n\nimport { searchPeople } from '../logic/wca-api';\nimport './WcaPersonSelect.css';\n\nexport default class WcaPersonSelect extends Component {\n  state = {\n    peopleFound: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.findPeopleDebounced = _.debounce(this.findPeople, 300);\n  }\n\n  findPeople = query => {\n    if (query) {\n      searchPeople(query).then(people => this.setState({ peopleFound: people }));\n    } else {\n      this.setState({ peopleFound: [] });\n    }\n  };\n\n  handleChange = (person, { clearSelection }) => {\n    const { onChange, clearOnChange } = this.props;\n    person && onChange(person);\n    clearOnChange && clearSelection();\n  };\n\n  render() {\n    const { fullWidth, label } = this.props;\n\n    return (\n      <Downshift\n        onChange={this.handleChange}\n        itemToString={person => _.get(person, 'name', '')}\n        onInputValueChange={this.findPeopleDebounced}\n      >\n        {({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n          <div className=\"wca-person-select\">\n            <TextField {...getInputProps({ fullWidth, label })} />\n            {isOpen && (\n              <Paper square className=\"options-list\">\n                {this.state.peopleFound.map((person, index) => (\n                  <MenuItem {...getItemProps({\n                    item: person,\n                    selected: highlightedIndex === index,\n                    key: person.id\n                  })}>\n                    <Avatar src={person.avatar.thumbUrl} />\n                    <ListItemText primary={person.name} secondary={person.wcaId} />\n                  </MenuItem>\n                ))}\n              </Paper>\n            )}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport _ from 'lodash';\n\nimport WcaPersonSelect from './WcaPersonSelect';\n\nexport default class EditablePeopleList extends PureComponent {\n  onPersonAdded(person) {\n    this.props.onChange(_.uniqBy([...this.props.people, person], 'wcaId'));\n  }\n\n  onPersonRemoved(person) {\n    this.props.onChange(_.reject(this.props.people, { wcaId: person.wcaId }));\n  }\n\n  render() {\n    return (\n      <Paper elevation={1} style={{ padding: 8 }}>\n        <Grid container spacing={8}>\n          <Grid item xs={12}>\n            <WcaPersonSelect fullWidth label=\"Add person\" clearOnChange onChange={person => this.onPersonAdded(person)} />\n          </Grid>\n          <Grid item xs={12}>\n            <List dense style={{ maxHeight: 200, overflow: 'auto' }}>\n              {_.sortBy(this.props.people, 'name').map(person => (\n                <ListItem key={person.wcaId}>\n                  <Avatar src={person.avatar.thumbUrl} />\n                  <ListItemText primary={person.name} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={() => this.onPersonRemoved(person)}>\n                      <Icon>delete</Icon>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { getPeopleByWcaIds } from '../logic/wca-api';\nimport { rankingFromSearchParams, rankingToSearchParams } from '../logic/url-utils';\n\nimport EditablePeopleList from './EditablePeopleList';\n\nexport default class RankingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: rankingFromSearchParams(props.location.search),\n      people: [],\n      redirectPath: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    getPeopleByWcaIds(this.state.ranking.wcaIds)\n      .then(peopleData => this.setState({\n        loading: false,\n        people: _.map(peopleData, 'person')\n      }));\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { ranking, people } = this.state;\n    this.setState({\n      redirectPath: '/show?' + rankingToSearchParams({ name: ranking.name, wcaIds: _.map(people, 'wcaId') })\n    });\n  };\n\n  handleNameChange = event => {\n    const { ranking } = this.state;\n    this.setState({\n      ranking: { ...ranking, name: event.target.value }\n    });\n  };\n\n  handlePeopleChange = people => {\n    this.setState({ people });\n  };\n\n  render() {\n    const { redirectPath, ranking, people, loading } = this.state;\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <div>\n        <Typography variant=\"h5\">Edit ranking</Typography>\n        <form onSubmit={this.handleSubmit}>\n          <Grid container direction=\"column\" spacing={16}>\n            <Grid item>\n              <TextField fullWidth label=\"Ranking name\" value={ranking.name} onChange={this.handleNameChange} />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle2\" style={{ marginBottom: 8 }}>\n                People\n              </Typography>\n              {loading ? <LinearProgress /> : (\n                <EditablePeopleList people={people} onChange={this.handlePeopleChange} />\n              )}\n            </Grid>\n            <Grid item>\n              <Button type=\"submit\" variant=\"outlined\">Done</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n","const events = [\n  { id: '333',    name: 'Rubik\\'s Cube',      icon: 'event-333'   },\n  { id: '222',    name: '2x2x2 Cube',         icon: 'event-222'   },\n  { id: '444',    name: '4x4x4 Cube',         icon: 'event-444'   },\n  { id: '555',    name: '5x5x5 Cube',         icon: 'event-555'   },\n  { id: '666',    name: '6x6x6 Cube',         icon: 'event-666'   },\n  { id: '777',    name: '7x7x7 Cube',         icon: 'event-777'   },\n  { id: '333bf',  name: '3x3x3 Blindfolded',  icon: 'event-333bf' },\n  { id: '333fm',  name: '3x3x3 Fewest Moves', icon: 'event-333fm' },\n  { id: '333oh',  name: '3x3x3 One-Handed',   icon: 'event-333oh' },\n  { id: '333ft',  name: '3x3x3 With Feet',    icon: 'event-333ft' },\n  { id: 'minx',   name: 'Megaminx',           icon: 'event-minx'  },\n  { id: 'pyram',  name: 'Pyraminx',           icon: 'event-pyram' },\n  { id: 'clock',  name: 'Rubik\\'s Clock',     icon: 'event-clock' },\n  { id: 'skewb',  name: 'Skewb',              icon: 'event-skewb' },\n  { id: 'sq1',    name: 'Square-1',           icon: 'event-sq1'   },\n  { id: '444bf',  name: '4x4x4 Blindfolded',  icon: 'event-444bf' },\n  { id: '555bf',  name: '5x5x5 Blindfolded',  icon: 'event-555bf' },\n  { id: '333mbf', name: '3x3x3 Multi-Blind',  icon: 'event-333mbf' }\n];\n\nexport default events;\n","import React, { Component } from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport events from '../logic/events';\n\nexport default class EventSelect extends Component {\n  render() {\n    return (\n      <div>\n        {events.map(event => (\n          <Tooltip title={event.name} placement=\"top\" key={event.id}>\n            <IconButton onClick={() => this.props.onChange(event)}>\n              <span\n                className={`cubing-icon ${event.icon}`}\n                style={{ opacity: event.id === this.props.value.id ? 1 : 0.3 }}\n              />\n            </IconButton>\n          </Tooltip>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport _ from 'lodash';\n\nimport './RankingTable.css';\nimport { resultToString } from '../logic/utils';\n\nexport default class RankingTable extends Component {\n  state = {\n    format: 'single'\n  };\n\n  setFormat(format) {\n    this.setState({ format });\n  }\n\n  formattedPersonalBest(personData, format) {\n    const { event } = this.props;\n    const result = _.get(personData, `personalRecords.${event.id}.${format}.best`);\n    return result ? resultToString(result, event.id, format) : '';\n  }\n\n  peopleDataForEvent() {\n    const { event, peopleData } = this.props;\n    const { format } = this.state;\n    return _(peopleData)\n      .filter(`personalRecords.${event.id}.${format}`)\n      .orderBy([`personalRecords.${event.id}.${format}.localRank`])\n      .value();\n  }\n\n  render() {\n    const { format } = this.state;\n\n    return (\n      <div className=\"ranking-table-container\">\n        <Table className={`sort-by-${format}`}>\n          <TableHead className=\"ranking-table-head\">\n            <TableRow>\n              <TableCell padding=\"dense\"></TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell numeric className=\"single\" onClick={() => this.setFormat('single')}>\n                Single\n              </TableCell>\n              <TableCell numeric className=\"average\" onClick={() => this.setFormat('average')}>\n                Average\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.peopleDataForEvent().map(personData => (\n              <TableRow key={personData.person.wcaId}>\n                <TableCell padding=\"dense\">\n                  {personData.personalRecords[this.props.event.id][format].localRank}\n                </TableCell>\n                <TableCell>\n                  <a href={personData.person.url} target=\"_blank\" rel=\"noopener noreferrer\">{personData.person.name}</a>\n                </TableCell>\n                <TableCell numeric className=\"single\">\n                  {this.formattedPersonalBest(personData, 'single')}\n                </TableCell>\n                <TableCell numeric className=\"average\">\n                  {this.formattedPersonalBest(personData, 'average')}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport clipboard from 'clipboard-polyfill';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\nimport html2canvas from 'html2canvas';\n\nimport { getPeopleByWcaIds } from '../logic/wca-api';\nimport { shortenUrl, rankingFromSearchParams, rankingToSearchParams } from '../logic/url-utils';\nimport EventSelect from './EventSelect';\nimport RankingTable from './RankingTable';\n\nimport events from '../logic/events';\n\nexport default class Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: rankingFromSearchParams(props.location.search),\n      peopleData: [],\n      event: events[0],\n      shortUrl: window.location.href, /* Use the long URL until the short one is fetched. */\n      redirectPath: null,\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    getPeopleByWcaIds(this.state.ranking.wcaIds)\n      .then(peopleData => this.setState({\n        loading: false,\n        peopleData: this.withLocalRanks(peopleData)\n      }));\n    // The Google URL API no longer works\n    // shortenUrl(window.location.href)\n    //   .then(shortUrl => this.setState({ shortUrl }));\n  }\n\n  withLocalRanks(peopleData) {\n    _.each(events, event => {\n      _.each(['single', 'average'], format => {\n        const filteredPeopleData = _.filter(peopleData, `personalRecords.${event.id}.${format}`);\n        const worldRanks = _.sortBy(_.map(filteredPeopleData, `personalRecords.${event.id}.${format}.worldRank`));\n        _.each(filteredPeopleData, ({ personalRecords }) => {\n          const record = personalRecords[event.id][format];\n          record.localRank = _.indexOf(worldRanks, record.worldRank) + 1;\n        })\n      });\n    });\n    return peopleData;\n  }\n\n  handleEventChange = event => {\n    this.setState({ event });\n  };\n\n  copyUrl = () => {\n    clipboard.writeText(this.state.shortUrl);\n  };\n\n  edit = () => {\n    const { ranking, peopleData } = this.state;\n    this.setState({\n      redirectPath: '/edit?' + rankingToSearchParams({ name: ranking.name, wcaIds: _.map(peopleData, 'person.wcaId') })\n    });\n  };\n\n  downloadImage = () => {\n    const { event, ranking } = this.state;\n    const rankingName = ranking.name.toLowerCase().replace(/\\s+/, '-');\n    const filename = `rankings-${rankingName}-${event.id}.png`;\n    html2canvas(this.imageArea, { logging: false }).then(canvas => {\n      const a = document.createElement('a');\n      a.download = filename;\n      a.href = canvas.toDataURL();\n      a.click();\n    });\n  };\n\n  render() {\n    const { redirectPath, ranking, peopleData, event, loading } = this.state;\n\n    return redirectPath ? <Redirect to={redirectPath} /> : (\n      <div style={{ textAlign: 'center' }}>\n        <Typography variant=\"h5\">\n          {ranking.name}\n          <div style={{ display: 'inline-block' }}>\n            <Tooltip title=\"Copy URL\" placement=\"right\">\n              <IconButton onClick={this.copyUrl}>\n                <Icon>link</Icon>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Edit\" placement=\"right\">\n              <IconButton onClick={this.edit}>\n                <Icon>edit</Icon>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Download image\" placement=\"right\">\n              <IconButton onClick={this.downloadImage}>\n                <Icon>photo</Icon>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Typography>\n        <EventSelect value={event} onChange={this.handleEventChange} />\n        <div ref={element => this.imageArea = element}>\n          <Paper>\n            <RankingTable peopleData={peopleData} event={event} />\n            {loading && <LinearProgress />}\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport RankingForm from './RankingForm';\nimport Ranking from './Ranking';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: blueGrey,\n  },\n});\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Navigation />\n          <Grid container justify=\"center\">\n            <Grid item xs={12} md={8} style={{ padding: 16 }}>\n              <Route exact path=\"/\" component={Home}/>\n              <Route path=\"/edit\" component={RankingForm}/>\n              <Route path=\"/show\" component={Ranking}/>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"@cubing/icons\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}